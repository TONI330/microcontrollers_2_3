
Eindopdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800200  00000b8a  00000c1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b8a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800206  00800206  00000c24  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c24  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c54  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000c94  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011e8  00000000  00000000  00000d54  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e7a  00000000  00000000  00001f3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006c9  00000000  00000000  00002db6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001ac  00000000  00000000  00003480  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000723  00000000  00000000  0000362c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000569  00000000  00000000  00003d4f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000042b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6f c0       	rjmp	.+222    	; 0x124 <__vector_17>
  46:	00 00       	nop
  48:	7c c0       	rjmp	.+248    	; 0x142 <__vector_18>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	f6 c1       	rjmp	.+1004   	; 0x442 <__vector_21>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2
  f6:	a6 e0       	ldi	r26, 0x06	; 6
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a2 32       	cpi	r26, 0x22	; 34
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>

00000104 <__do_copy_data>:
 104:	12 e0       	ldi	r17, 0x02	; 2
 106:	a0 e0       	ldi	r26, 0x00	; 0
 108:	b2 e0       	ldi	r27, 0x02	; 2
 10a:	ea e8       	ldi	r30, 0x8A	; 138
 10c:	fb e0       	ldi	r31, 0x0B	; 11
 10e:	00 e0       	ldi	r16, 0x00	; 0
 110:	0b bf       	out	0x3b, r16	; 59
 112:	02 c0       	rjmp	.+4      	; 0x118 <__do_copy_data+0x14>
 114:	07 90       	elpm	r0, Z+
 116:	0d 92       	st	X+, r0
 118:	a6 30       	cpi	r26, 0x06	; 6
 11a:	b1 07       	cpc	r27, r17
 11c:	d9 f7       	brne	.-10     	; 0x114 <__do_copy_data+0x10>
 11e:	4d d1       	rcall	.+666    	; 0x3ba <main>
 120:	32 c5       	rjmp	.+2660   	; 0xb86 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <__vector_17>:
	set_speed_motor(percentage, LEFT_MOTOR);
	set_speed_motor(percentage, RIGHT_MOTOR);
}

void turn(short percentage)
{
 124:	1f 92       	push	r1
 126:	0f 92       	push	r0
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	0f 92       	push	r0
 12c:	11 24       	eor	r1, r1
 12e:	8f 93       	push	r24
 130:	85 b1       	in	r24, 0x05	; 5
 132:	80 58       	subi	r24, 0x80	; 128
 134:	85 b9       	out	0x05, r24	; 5
 136:	8f 91       	pop	r24
 138:	0f 90       	pop	r0
 13a:	0f be       	out	0x3f, r0	; 63
 13c:	0f 90       	pop	r0
 13e:	1f 90       	pop	r1
 140:	18 95       	reti

00000142 <__vector_18>:
 142:	1f 92       	push	r1
 144:	0f 92       	push	r0
 146:	0f b6       	in	r0, 0x3f	; 63
 148:	0f 92       	push	r0
 14a:	11 24       	eor	r1, r1
 14c:	8f 93       	push	r24
 14e:	9f 93       	push	r25
 150:	95 b1       	in	r25, 0x05	; 5
 152:	80 e4       	ldi	r24, 0x40	; 64
 154:	89 27       	eor	r24, r25
 156:	85 b9       	out	0x05, r24	; 5
 158:	9f 91       	pop	r25
 15a:	8f 91       	pop	r24
 15c:	0f 90       	pop	r0
 15e:	0f be       	out	0x3f, r0	; 63
 160:	0f 90       	pop	r0
 162:	1f 90       	pop	r1
 164:	18 95       	reti

00000166 <calculate_timer_compare_time>:
 166:	20 e2       	ldi	r18, 0x20	; 32
 168:	3e e4       	ldi	r19, 0x4E	; 78
 16a:	a9 01       	movw	r20, r18
 16c:	48 1b       	sub	r20, r24
 16e:	59 0b       	sbc	r21, r25
 170:	ca 01       	movw	r24, r20
 172:	08 95       	ret

00000174 <set_speed_motor>:
 174:	61 15       	cp	r22, r1
 176:	71 05       	cpc	r23, r1
 178:	09 f0       	breq	.+2      	; 0x17c <set_speed_motor+0x8>
 17a:	59 c0       	rjmp	.+178    	; 0x22e <set_speed_motor+0xba>
 17c:	82 33       	cpi	r24, 0x32	; 50
 17e:	91 05       	cpc	r25, r1
 180:	41 f4       	brne	.+16     	; 0x192 <set_speed_motor+0x1e>
 182:	8c ed       	ldi	r24, 0xDC	; 220
 184:	95 e0       	ldi	r25, 0x05	; 5
 186:	ef df       	rcall	.-34     	; 0x166 <calculate_timer_compare_time>
 188:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
 18c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
 190:	08 95       	ret
 192:	83 33       	cpi	r24, 0x33	; 51
 194:	91 05       	cpc	r25, r1
 196:	24 f1       	brlt	.+72     	; 0x1e0 <set_speed_motor+0x6c>
 198:	bc 01       	movw	r22, r24
 19a:	62 53       	subi	r22, 0x32	; 50
 19c:	71 09       	sbc	r23, r1
 19e:	07 2e       	mov	r0, r23
 1a0:	00 0c       	add	r0, r0
 1a2:	88 0b       	sbc	r24, r24
 1a4:	99 0b       	sbc	r25, r25
 1a6:	df d2       	rcall	.+1470   	; 0x766 <__floatsisf>
 1a8:	20 e0       	ldi	r18, 0x00	; 0
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	48 e4       	ldi	r20, 0x48	; 72
 1ae:	52 e4       	ldi	r21, 0x42	; 66
 1b0:	3f d2       	rcall	.+1150   	; 0x630 <__divsf3>
 1b2:	20 e0       	ldi	r18, 0x00	; 0
 1b4:	30 e0       	ldi	r19, 0x00	; 0
 1b6:	48 ec       	ldi	r20, 0xC8	; 200
 1b8:	52 e4       	ldi	r21, 0x42	; 66
 1ba:	61 d3       	rcall	.+1730   	; 0x87e <__mulsf3>
 1bc:	2d ec       	ldi	r18, 0xCD	; 205
 1be:	3c ec       	ldi	r19, 0xCC	; 204
 1c0:	4c ec       	ldi	r20, 0xCC	; 204
 1c2:	5f e3       	ldi	r21, 0x3F	; 63
 1c4:	5c d3       	rcall	.+1720   	; 0x87e <__mulsf3>
 1c6:	20 e0       	ldi	r18, 0x00	; 0
 1c8:	30 e8       	ldi	r19, 0x80	; 128
 1ca:	40 ec       	ldi	r20, 0xC0	; 192
 1cc:	54 e4       	ldi	r21, 0x44	; 68
 1ce:	cc d1       	rcall	.+920    	; 0x568 <__addsf3>
 1d0:	97 d2       	rcall	.+1326   	; 0x700 <__fixsfsi>
 1d2:	cb 01       	movw	r24, r22
 1d4:	c8 df       	rcall	.-112    	; 0x166 <calculate_timer_compare_time>
 1d6:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
 1da:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
 1de:	08 95       	ret
 1e0:	62 e3       	ldi	r22, 0x32	; 50
 1e2:	70 e0       	ldi	r23, 0x00	; 0
 1e4:	68 1b       	sub	r22, r24
 1e6:	79 0b       	sbc	r23, r25
 1e8:	07 2e       	mov	r0, r23
 1ea:	00 0c       	add	r0, r0
 1ec:	88 0b       	sbc	r24, r24
 1ee:	99 0b       	sbc	r25, r25
 1f0:	ba d2       	rcall	.+1396   	; 0x766 <__floatsisf>
 1f2:	20 e0       	ldi	r18, 0x00	; 0
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	48 e4       	ldi	r20, 0x48	; 72
 1f8:	52 e4       	ldi	r21, 0x42	; 66
 1fa:	1a d2       	rcall	.+1076   	; 0x630 <__divsf3>
 1fc:	20 e0       	ldi	r18, 0x00	; 0
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	48 ec       	ldi	r20, 0xC8	; 200
 202:	52 e4       	ldi	r21, 0x42	; 66
 204:	3c d3       	rcall	.+1656   	; 0x87e <__mulsf3>
 206:	2d ec       	ldi	r18, 0xCD	; 205
 208:	3c ec       	ldi	r19, 0xCC	; 204
 20a:	4c ec       	ldi	r20, 0xCC	; 204
 20c:	5f e3       	ldi	r21, 0x3F	; 63
 20e:	37 d3       	rcall	.+1646   	; 0x87e <__mulsf3>
 210:	9b 01       	movw	r18, r22
 212:	ac 01       	movw	r20, r24
 214:	60 e0       	ldi	r22, 0x00	; 0
 216:	70 e8       	ldi	r23, 0x80	; 128
 218:	86 eb       	ldi	r24, 0xB6	; 182
 21a:	94 e4       	ldi	r25, 0x44	; 68
 21c:	a4 d1       	rcall	.+840    	; 0x566 <__subsf3>
 21e:	70 d2       	rcall	.+1248   	; 0x700 <__fixsfsi>
 220:	cb 01       	movw	r24, r22
 222:	a1 df       	rcall	.-190    	; 0x166 <calculate_timer_compare_time>
 224:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
 228:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
 22c:	08 95       	ret
 22e:	61 30       	cpi	r22, 0x01	; 1
 230:	71 05       	cpc	r23, r1
 232:	09 f0       	breq	.+2      	; 0x236 <set_speed_motor+0xc2>
 234:	58 c0       	rjmp	.+176    	; 0x2e6 <set_speed_motor+0x172>
 236:	82 33       	cpi	r24, 0x32	; 50
 238:	91 05       	cpc	r25, r1
 23a:	41 f4       	brne	.+16     	; 0x24c <set_speed_motor+0xd8>
 23c:	8c ed       	ldi	r24, 0xDC	; 220
 23e:	95 e0       	ldi	r25, 0x05	; 5
 240:	92 df       	rcall	.-220    	; 0x166 <calculate_timer_compare_time>
 242:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 246:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 24a:	08 95       	ret
 24c:	83 33       	cpi	r24, 0x33	; 51
 24e:	91 05       	cpc	r25, r1
 250:	34 f1       	brlt	.+76     	; 0x29e <set_speed_motor+0x12a>
 252:	bc 01       	movw	r22, r24
 254:	62 53       	subi	r22, 0x32	; 50
 256:	71 09       	sbc	r23, r1
 258:	07 2e       	mov	r0, r23
 25a:	00 0c       	add	r0, r0
 25c:	88 0b       	sbc	r24, r24
 25e:	99 0b       	sbc	r25, r25
 260:	82 d2       	rcall	.+1284   	; 0x766 <__floatsisf>
 262:	20 e0       	ldi	r18, 0x00	; 0
 264:	30 e0       	ldi	r19, 0x00	; 0
 266:	48 e4       	ldi	r20, 0x48	; 72
 268:	52 e4       	ldi	r21, 0x42	; 66
 26a:	e2 d1       	rcall	.+964    	; 0x630 <__divsf3>
 26c:	20 e0       	ldi	r18, 0x00	; 0
 26e:	30 e0       	ldi	r19, 0x00	; 0
 270:	48 ec       	ldi	r20, 0xC8	; 200
 272:	52 e4       	ldi	r21, 0x42	; 66
 274:	04 d3       	rcall	.+1544   	; 0x87e <__mulsf3>
 276:	2d ec       	ldi	r18, 0xCD	; 205
 278:	3c ec       	ldi	r19, 0xCC	; 204
 27a:	4c ec       	ldi	r20, 0xCC	; 204
 27c:	5f e3       	ldi	r21, 0x3F	; 63
 27e:	ff d2       	rcall	.+1534   	; 0x87e <__mulsf3>
 280:	9b 01       	movw	r18, r22
 282:	ac 01       	movw	r20, r24
 284:	60 e0       	ldi	r22, 0x00	; 0
 286:	70 e8       	ldi	r23, 0x80	; 128
 288:	86 eb       	ldi	r24, 0xB6	; 182
 28a:	94 e4       	ldi	r25, 0x44	; 68
 28c:	6c d1       	rcall	.+728    	; 0x566 <__subsf3>
 28e:	38 d2       	rcall	.+1136   	; 0x700 <__fixsfsi>
 290:	cb 01       	movw	r24, r22
 292:	69 df       	rcall	.-302    	; 0x166 <calculate_timer_compare_time>
 294:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 298:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 29c:	08 95       	ret
 29e:	62 e3       	ldi	r22, 0x32	; 50
 2a0:	70 e0       	ldi	r23, 0x00	; 0
 2a2:	68 1b       	sub	r22, r24
 2a4:	79 0b       	sbc	r23, r25
 2a6:	07 2e       	mov	r0, r23
 2a8:	00 0c       	add	r0, r0
 2aa:	88 0b       	sbc	r24, r24
 2ac:	99 0b       	sbc	r25, r25
 2ae:	5b d2       	rcall	.+1206   	; 0x766 <__floatsisf>
 2b0:	20 e0       	ldi	r18, 0x00	; 0
 2b2:	30 e0       	ldi	r19, 0x00	; 0
 2b4:	48 e4       	ldi	r20, 0x48	; 72
 2b6:	52 e4       	ldi	r21, 0x42	; 66
 2b8:	bb d1       	rcall	.+886    	; 0x630 <__divsf3>
 2ba:	20 e0       	ldi	r18, 0x00	; 0
 2bc:	30 e0       	ldi	r19, 0x00	; 0
 2be:	48 ec       	ldi	r20, 0xC8	; 200
 2c0:	52 e4       	ldi	r21, 0x42	; 66
 2c2:	dd d2       	rcall	.+1466   	; 0x87e <__mulsf3>
 2c4:	2d ec       	ldi	r18, 0xCD	; 205
 2c6:	3c ec       	ldi	r19, 0xCC	; 204
 2c8:	4c ec       	ldi	r20, 0xCC	; 204
 2ca:	5f e3       	ldi	r21, 0x3F	; 63
 2cc:	d8 d2       	rcall	.+1456   	; 0x87e <__mulsf3>
 2ce:	20 e0       	ldi	r18, 0x00	; 0
 2d0:	30 e8       	ldi	r19, 0x80	; 128
 2d2:	40 ec       	ldi	r20, 0xC0	; 192
 2d4:	54 e4       	ldi	r21, 0x44	; 68
 2d6:	48 d1       	rcall	.+656    	; 0x568 <__addsf3>
 2d8:	13 d2       	rcall	.+1062   	; 0x700 <__fixsfsi>
 2da:	cb 01       	movw	r24, r22
 2dc:	44 df       	rcall	.-376    	; 0x166 <calculate_timer_compare_time>
 2de:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 2e2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 2e6:	08 95       	ret

000002e8 <set_speed>:
 2e8:	cf 93       	push	r28
 2ea:	df 93       	push	r29
 2ec:	ec 01       	movw	r28, r24
 2ee:	60 e0       	ldi	r22, 0x00	; 0
 2f0:	70 e0       	ldi	r23, 0x00	; 0
 2f2:	40 df       	rcall	.-384    	; 0x174 <set_speed_motor>
 2f4:	61 e0       	ldi	r22, 0x01	; 1
 2f6:	70 e0       	ldi	r23, 0x00	; 0
 2f8:	ce 01       	movw	r24, r28
 2fa:	3c df       	rcall	.-392    	; 0x174 <set_speed_motor>
 2fc:	df 91       	pop	r29
 2fe:	cf 91       	pop	r28
 300:	08 95       	ret

00000302 <control_drive>:
	
}

void control_drive(short percentage_speed, short percentage_turn)
{	
	set_speed(percentage_speed);
 302:	f2 cf       	rjmp	.-28     	; 0x2e8 <set_speed>
 304:	08 95       	ret

00000306 <init_servos>:
}

void init_servos()
{
	// Set up timer in PWM, Phase and frequency Correct mode.
	TCCR1A = 0b01010110;
 306:	86 e5       	ldi	r24, 0x56	; 86
 308:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>

	// Set up timer with pre-scaler = 8 and PWM, Phase and frequency correct mode.
	TCCR1B |= (1 << WGM13) | (1 << CS11);
 30c:	e1 e8       	ldi	r30, 0x81	; 129
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	80 81       	ld	r24, Z
 312:	82 61       	ori	r24, 0x12	; 18
 314:	80 83       	st	Z, r24

	// Initialize counter.
	TCNT1 = 0;
 316:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
 31a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
	ICR1 = 20000;
 31e:	80 e2       	ldi	r24, 0x20	; 32
 320:	9e e4       	ldi	r25, 0x4E	; 78
 322:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7c0087>
 326:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7c0086>

	// Initialize compare values.
	OCR1A = calculate_timer_compare_time(DRIVE_FULL_STOP_MS);
 32a:	8c ed       	ldi	r24, 0xDC	; 220
 32c:	95 e0       	ldi	r25, 0x05	; 5
 32e:	1b df       	rcall	.-458    	; 0x166 <calculate_timer_compare_time>
 330:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 334:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
	OCR1B = calculate_timer_compare_time(DRIVE_FULL_STOP_MS);
 338:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
 33c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>

	// Enable compare interrupts.
	TIMSK1 |= (1 << OCIE1A);
 340:	ef e6       	ldi	r30, 0x6F	; 111
 342:	f0 e0       	ldi	r31, 0x00	; 0
 344:	80 81       	ld	r24, Z
 346:	82 60       	ori	r24, 0x02	; 2
 348:	80 83       	st	Z, r24
	TIMSK1 |= (1 << OCIE1B);
 34a:	80 81       	ld	r24, Z
 34c:	84 60       	ori	r24, 0x04	; 4
 34e:	80 83       	st	Z, r24
	
	DDRB |= (1 << 7) | (1 << 6);
 350:	84 b1       	in	r24, 0x04	; 4
 352:	80 6c       	ori	r24, 0xC0	; 192
 354:	84 b9       	out	0x04, r24	; 4
 356:	08 95       	ret

00000358 <calculate_stick_percentage>:
#define STICK_CENTER 670
#define STICK_MAXIMUM 890

int calculate_stick_percentage(int pwm_value, int delta)
{
	if(STICK_MINIMUM >= pwm_value - delta) return 0;
 358:	9c 01       	movw	r18, r24
 35a:	26 1b       	sub	r18, r22
 35c:	37 0b       	sbc	r19, r23
 35e:	23 3c       	cpi	r18, 0xC3	; 195
 360:	41 e0       	ldi	r20, 0x01	; 1
 362:	34 07       	cpc	r19, r20
 364:	0c f1       	brlt	.+66     	; 0x3a8 <calculate_stick_percentage+0x50>
	if(STICK_MAXIMUM <= pwm_value + delta) return 100;
 366:	68 0f       	add	r22, r24
 368:	79 1f       	adc	r23, r25
 36a:	6a 37       	cpi	r22, 0x7A	; 122
 36c:	43 e0       	ldi	r20, 0x03	; 3
 36e:	74 07       	cpc	r23, r20
 370:	f4 f4       	brge	.+60     	; 0x3ae <calculate_stick_percentage+0x56>
	if(STICK_CENTER <= pwm_value + delta && STICK_CENTER >= pwm_value - delta) return 50;
 372:	6e 39       	cpi	r22, 0x9E	; 158
 374:	72 40       	sbci	r23, 0x02	; 2
 376:	1c f0       	brlt	.+6      	; 0x37e <calculate_stick_percentage+0x26>
 378:	2f 39       	cpi	r18, 0x9F	; 159
 37a:	32 40       	sbci	r19, 0x02	; 2
 37c:	dc f0       	brlt	.+54     	; 0x3b4 <calculate_stick_percentage+0x5c>
 37e:	bc 01       	movw	r22, r24
	
	return (pwm_value - STICK_MINIMUM) / 440.0 * 100;
 380:	62 5c       	subi	r22, 0xC2	; 194
 382:	71 40       	sbci	r23, 0x01	; 1
 384:	07 2e       	mov	r0, r23
 386:	00 0c       	add	r0, r0
 388:	88 0b       	sbc	r24, r24
 38a:	99 0b       	sbc	r25, r25
 38c:	ec d1       	rcall	.+984    	; 0x766 <__floatsisf>
 38e:	20 e0       	ldi	r18, 0x00	; 0
 390:	30 e0       	ldi	r19, 0x00	; 0
 392:	4c ed       	ldi	r20, 0xDC	; 220
 394:	53 e4       	ldi	r21, 0x43	; 67
 396:	4c d1       	rcall	.+664    	; 0x630 <__divsf3>
 398:	20 e0       	ldi	r18, 0x00	; 0
 39a:	30 e0       	ldi	r19, 0x00	; 0
 39c:	48 ec       	ldi	r20, 0xC8	; 200
 39e:	52 e4       	ldi	r21, 0x42	; 66
 3a0:	6e d2       	rcall	.+1244   	; 0x87e <__mulsf3>
 3a2:	ae d1       	rcall	.+860    	; 0x700 <__fixsfsi>
 3a4:	cb 01       	movw	r24, r22
 3a6:	08 95       	ret
#define STICK_CENTER 670
#define STICK_MAXIMUM 890

int calculate_stick_percentage(int pwm_value, int delta)
{
	if(STICK_MINIMUM >= pwm_value - delta) return 0;
 3a8:	80 e0       	ldi	r24, 0x00	; 0
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	08 95       	ret
	if(STICK_MAXIMUM <= pwm_value + delta) return 100;
 3ae:	84 e6       	ldi	r24, 0x64	; 100
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	08 95       	ret
	if(STICK_CENTER <= pwm_value + delta && STICK_CENTER >= pwm_value - delta) return 50;
 3b4:	82 e3       	ldi	r24, 0x32	; 50
 3b6:	90 e0       	ldi	r25, 0x00	; 0
	
	return (pwm_value - STICK_MINIMUM) / 440.0 * 100;
}
 3b8:	08 95       	ret

000003ba <main>:

int main(void)
{
	sei(); // Enable interrupts.
 3ba:	78 94       	sei
	DDRB = 0;
 3bc:	14 b8       	out	0x04, r1	; 4
	
	init_servos();
 3be:	a3 df       	rcall	.-186    	; 0x306 <init_servos>
	init_pwm();
 3c0:	17 d0       	rcall	.+46     	; 0x3f0 <init_pwm>
 3c2:	80 e1       	ldi	r24, 0x10	; 16
	
	int* test_value = malloc(16);
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	be d2       	rcall	.+1404   	; 0x944 <malloc>
 3c8:	ec 01       	movw	r28, r24
 3ca:	bc 01       	movw	r22, r24
	pwm_reader_add_pin(STICK_LEFT_UP_DOWN, test_value);
 3cc:	83 e0       	ldi	r24, 0x03	; 3
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	1b d0       	rcall	.+54     	; 0x408 <pwm_reader_add_pin>
 3d2:	6a e0       	ldi	r22, 0x0A	; 10

    while (1) 
    {
		control_drive(100 - calculate_stick_percentage(*test_value, 10), 0);
 3d4:	70 e0       	ldi	r23, 0x00	; 0
 3d6:	88 81       	ld	r24, Y
 3d8:	99 81       	ldd	r25, Y+1	; 0x01
 3da:	be df       	rcall	.-132    	; 0x358 <calculate_stick_percentage>
 3dc:	60 e0       	ldi	r22, 0x00	; 0
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	24 e6       	ldi	r18, 0x64	; 100
 3e2:	30 e0       	ldi	r19, 0x00	; 0
 3e4:	a9 01       	movw	r20, r18
 3e6:	48 1b       	sub	r20, r24
 3e8:	59 0b       	sbc	r21, r25
 3ea:	ca 01       	movw	r24, r20
 3ec:	8a df       	rcall	.-236    	; 0x302 <control_drive>
 3ee:	f1 cf       	rjmp	.-30     	; 0x3d2 <main+0x18>

000003f0 <init_pwm>:
{
	 // Set up timer in PWM, Phase and frequency Correct mode.
	 //TCCR2A = 0b01010110;

	 // Set up timer with pre-scaler = 8 and PWM, Phase and frequency correct mode.
	 TCCR0B |= (1 << WGM13) | (1 << CS11);
 3f0:	85 b5       	in	r24, 0x25	; 37
 3f2:	82 61       	ori	r24, 0x12	; 18
 3f4:	85 bd       	out	0x25, r24	; 37

	 // Initialize counter.
	 TCNT0 = 0;
 3f6:	16 bc       	out	0x26, r1	; 38
	 //ICR1 = 20000;

	 // Initialize compare values.
	 OCR0A = TICKS_PER_MEASUREMENT;
 3f8:	8a e0       	ldi	r24, 0x0A	; 10
 3fa:	87 bd       	out	0x27, r24	; 39

	 // Enable compare interrupts.
	 TIMSK0 |= (1 << OCIE0A);
 3fc:	ee e6       	ldi	r30, 0x6E	; 110
 3fe:	f0 e0       	ldi	r31, 0x00	; 0
 400:	80 81       	ld	r24, Z
 402:	82 60       	ori	r24, 0x02	; 2
 404:	80 83       	st	Z, r24
 406:	08 95       	ret

00000408 <pwm_reader_add_pin>:
}

void pwm_reader_add_pin(int pin, int* out_ticks)
{
	input_pins[pin].output_pointer = out_ticks;
 408:	fc 01       	movw	r30, r24
 40a:	ee 0f       	add	r30, r30
 40c:	ff 1f       	adc	r31, r31
 40e:	8e 0f       	add	r24, r30
 410:	9f 1f       	adc	r25, r31
 412:	fc 01       	movw	r30, r24
 414:	ea 5f       	subi	r30, 0xFA	; 250
 416:	fd 4f       	sbci	r31, 0xFD	; 253
 418:	71 83       	std	Z+1, r23	; 0x01
 41a:	60 83       	st	Z, r22
	input_pins[pin].state = false;
 41c:	12 82       	std	Z+2, r1	; 0x02
 41e:	08 95       	ret

00000420 <pin_is_high>:
	
	Returns true if the given pin is high, else false.
*/
bool pin_is_high(short pin_number)
{
	return PINB & (1 << pin_number);
 420:	93 b1       	in	r25, 0x03	; 3
 422:	21 e0       	ldi	r18, 0x01	; 1
 424:	30 e0       	ldi	r19, 0x00	; 0
 426:	02 c0       	rjmp	.+4      	; 0x42c <pin_is_high+0xc>
 428:	22 0f       	add	r18, r18
 42a:	33 1f       	adc	r19, r19
 42c:	8a 95       	dec	r24
 42e:	e2 f7       	brpl	.-8      	; 0x428 <pin_is_high+0x8>
 430:	89 2f       	mov	r24, r25
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	28 23       	and	r18, r24
 436:	39 23       	and	r19, r25
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	23 2b       	or	r18, r19
 43c:	09 f4       	brne	.+2      	; 0x440 <pin_is_high+0x20>
 43e:	80 e0       	ldi	r24, 0x00	; 0
}
 440:	08 95       	ret

00000442 <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
 442:	1f 92       	push	r1
 444:	0f 92       	push	r0
 446:	0f b6       	in	r0, 0x3f	; 63
 448:	0f 92       	push	r0
 44a:	11 24       	eor	r1, r1
 44c:	0b b6       	in	r0, 0x3b	; 59
 44e:	0f 92       	push	r0
 450:	2f 93       	push	r18
 452:	3f 93       	push	r19
 454:	4f 93       	push	r20
 456:	5f 93       	push	r21
 458:	6f 93       	push	r22
 45a:	7f 93       	push	r23
 45c:	8f 93       	push	r24
 45e:	9f 93       	push	r25
 460:	af 93       	push	r26
 462:	bf 93       	push	r27
 464:	cf 93       	push	r28
 466:	df 93       	push	r29
 468:	ef 93       	push	r30
 46a:	ff 93       	push	r31
	for(int i = 0; i < 4; i++)
 46c:	c0 e0       	ldi	r28, 0x00	; 0
 46e:	d0 e0       	ldi	r29, 0x00	; 0
 470:	60 c0       	rjmp	.+192    	; 0x532 <__vector_21+0xf0>
	{
		if(input_pins[i].output_pointer == 0)
 472:	fe 01       	movw	r30, r28
 474:	ee 0f       	add	r30, r30
 476:	ff 1f       	adc	r31, r31
 478:	ec 0f       	add	r30, r28
 47a:	fd 1f       	adc	r31, r29
 47c:	ea 5f       	subi	r30, 0xFA	; 250
 47e:	fd 4f       	sbci	r31, 0xFD	; 253
 480:	80 81       	ld	r24, Z
 482:	91 81       	ldd	r25, Z+1	; 0x01
 484:	89 2b       	or	r24, r25
 486:	09 f4       	brne	.+2      	; 0x48a <__vector_21+0x48>
 488:	53 c0       	rjmp	.+166    	; 0x530 <__vector_21+0xee>
		{
			continue;
		}
		
		if(pin_is_high(i))
 48a:	ce 01       	movw	r24, r28
 48c:	c9 df       	rcall	.-110    	; 0x420 <pin_is_high>
 48e:	88 23       	and	r24, r24
 490:	89 f1       	breq	.+98     	; 0x4f4 <__vector_21+0xb2>
		{
			if(!input_pins[i].state)
 492:	fe 01       	movw	r30, r28
 494:	ee 0f       	add	r30, r30
 496:	ff 1f       	adc	r31, r31
 498:	ec 0f       	add	r30, r28
 49a:	fd 1f       	adc	r31, r29
 49c:	ea 5f       	subi	r30, 0xFA	; 250
 49e:	fd 4f       	sbci	r31, 0xFD	; 253
 4a0:	82 81       	ldd	r24, Z+2	; 0x02
 4a2:	81 11       	cpse	r24, r1
 4a4:	0e c0       	rjmp	.+28     	; 0x4c2 <__vector_21+0x80>
			{
				input_pins[i].state = true;
 4a6:	fe 01       	movw	r30, r28
 4a8:	ee 0f       	add	r30, r30
 4aa:	ff 1f       	adc	r31, r31
 4ac:	ec 0f       	add	r30, r28
 4ae:	fd 1f       	adc	r31, r29
 4b0:	ea 5f       	subi	r30, 0xFA	; 250
 4b2:	fd 4f       	sbci	r31, 0xFD	; 253
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	82 83       	std	Z+2, r24	; 0x02
				*input_pins[i].output_pointer = 0;				
 4b8:	01 90       	ld	r0, Z+
 4ba:	f0 81       	ld	r31, Z
 4bc:	e0 2d       	mov	r30, r0
 4be:	11 82       	std	Z+1, r1	; 0x01
 4c0:	10 82       	st	Z, r1
			}

			if(input_pins[i].state)
 4c2:	fe 01       	movw	r30, r28
 4c4:	ee 0f       	add	r30, r30
 4c6:	ff 1f       	adc	r31, r31
 4c8:	ec 0f       	add	r30, r28
 4ca:	fd 1f       	adc	r31, r29
 4cc:	ea 5f       	subi	r30, 0xFA	; 250
 4ce:	fd 4f       	sbci	r31, 0xFD	; 253
 4d0:	82 81       	ldd	r24, Z+2	; 0x02
 4d2:	88 23       	and	r24, r24
 4d4:	79 f0       	breq	.+30     	; 0x4f4 <__vector_21+0xb2>
			{
				*input_pins[i].output_pointer += TICKS_PER_MEASUREMENT;
 4d6:	fe 01       	movw	r30, r28
 4d8:	ee 0f       	add	r30, r30
 4da:	ff 1f       	adc	r31, r31
 4dc:	ec 0f       	add	r30, r28
 4de:	fd 1f       	adc	r31, r29
 4e0:	ea 5f       	subi	r30, 0xFA	; 250
 4e2:	fd 4f       	sbci	r31, 0xFD	; 253
 4e4:	01 90       	ld	r0, Z+
 4e6:	f0 81       	ld	r31, Z
 4e8:	e0 2d       	mov	r30, r0
 4ea:	80 81       	ld	r24, Z
 4ec:	91 81       	ldd	r25, Z+1	; 0x01
 4ee:	0a 96       	adiw	r24, 0x0a	; 10
 4f0:	91 83       	std	Z+1, r25	; 0x01
 4f2:	80 83       	st	Z, r24
			}			
		}

		if(!pin_is_high(i) && input_pins[i].state)
 4f4:	ce 01       	movw	r24, r28
 4f6:	94 df       	rcall	.-216    	; 0x420 <pin_is_high>
 4f8:	81 11       	cpse	r24, r1
 4fa:	1a c0       	rjmp	.+52     	; 0x530 <__vector_21+0xee>
 4fc:	fe 01       	movw	r30, r28
 4fe:	ee 0f       	add	r30, r30
 500:	ff 1f       	adc	r31, r31
 502:	ec 0f       	add	r30, r28
 504:	fd 1f       	adc	r31, r29
 506:	ea 5f       	subi	r30, 0xFA	; 250
 508:	fd 4f       	sbci	r31, 0xFD	; 253
 50a:	82 81       	ldd	r24, Z+2	; 0x02
 50c:	88 23       	and	r24, r24
 50e:	81 f0       	breq	.+32     	; 0x530 <__vector_21+0xee>
		{
			*input_pins[i].output_pointer += TICKS_PER_MEASUREMENT;
 510:	fe 01       	movw	r30, r28
 512:	ee 0f       	add	r30, r30
 514:	ff 1f       	adc	r31, r31
 516:	ec 0f       	add	r30, r28
 518:	fd 1f       	adc	r31, r29
 51a:	ea 5f       	subi	r30, 0xFA	; 250
 51c:	fd 4f       	sbci	r31, 0xFD	; 253
 51e:	a0 81       	ld	r26, Z
 520:	b1 81       	ldd	r27, Z+1	; 0x01
 522:	8d 91       	ld	r24, X+
 524:	9c 91       	ld	r25, X
 526:	11 97       	sbiw	r26, 0x01	; 1
 528:	0a 96       	adiw	r24, 0x0a	; 10
 52a:	8d 93       	st	X+, r24
 52c:	9c 93       	st	X, r25
			input_pins[i].state = false;
 52e:	12 82       	std	Z+2, r1	; 0x02
	return PINB & (1 << pin_number);
}

ISR(TIMER0_COMPA_vect)
{
	for(int i = 0; i < 4; i++)
 530:	21 96       	adiw	r28, 0x01	; 1
 532:	c4 30       	cpi	r28, 0x04	; 4
 534:	d1 05       	cpc	r29, r1
 536:	0c f4       	brge	.+2      	; 0x53a <__vector_21+0xf8>
 538:	9c cf       	rjmp	.-200    	; 0x472 <__vector_21+0x30>
			*input_pins[i].output_pointer += TICKS_PER_MEASUREMENT;
			input_pins[i].state = false;
		}
	}

	TCNT0 = 0;
 53a:	16 bc       	out	0x26, r1	; 38
}
 53c:	ff 91       	pop	r31
 53e:	ef 91       	pop	r30
 540:	df 91       	pop	r29
 542:	cf 91       	pop	r28
 544:	bf 91       	pop	r27
 546:	af 91       	pop	r26
 548:	9f 91       	pop	r25
 54a:	8f 91       	pop	r24
 54c:	7f 91       	pop	r23
 54e:	6f 91       	pop	r22
 550:	5f 91       	pop	r21
 552:	4f 91       	pop	r20
 554:	3f 91       	pop	r19
 556:	2f 91       	pop	r18
 558:	0f 90       	pop	r0
 55a:	0b be       	out	0x3b, r0	; 59
 55c:	0f 90       	pop	r0
 55e:	0f be       	out	0x3f, r0	; 63
 560:	0f 90       	pop	r0
 562:	1f 90       	pop	r1
 564:	18 95       	reti

00000566 <__subsf3>:
 566:	50 58       	subi	r21, 0x80	; 128

00000568 <__addsf3>:
 568:	bb 27       	eor	r27, r27
 56a:	aa 27       	eor	r26, r26
 56c:	0e d0       	rcall	.+28     	; 0x58a <__addsf3x>
 56e:	4d c1       	rjmp	.+666    	; 0x80a <__fp_round>
 570:	3e d1       	rcall	.+636    	; 0x7ee <__fp_pscA>
 572:	30 f0       	brcs	.+12     	; 0x580 <__addsf3+0x18>
 574:	43 d1       	rcall	.+646    	; 0x7fc <__fp_pscB>
 576:	20 f0       	brcs	.+8      	; 0x580 <__addsf3+0x18>
 578:	31 f4       	brne	.+12     	; 0x586 <__addsf3+0x1e>
 57a:	9f 3f       	cpi	r25, 0xFF	; 255
 57c:	11 f4       	brne	.+4      	; 0x582 <__addsf3+0x1a>
 57e:	1e f4       	brtc	.+6      	; 0x586 <__addsf3+0x1e>
 580:	33 c1       	rjmp	.+614    	; 0x7e8 <__fp_nan>
 582:	0e f4       	brtc	.+2      	; 0x586 <__addsf3+0x1e>
 584:	e0 95       	com	r30
 586:	e7 fb       	bst	r30, 7
 588:	29 c1       	rjmp	.+594    	; 0x7dc <__fp_inf>

0000058a <__addsf3x>:
 58a:	e9 2f       	mov	r30, r25
 58c:	4f d1       	rcall	.+670    	; 0x82c <__fp_split3>
 58e:	80 f3       	brcs	.-32     	; 0x570 <__addsf3+0x8>
 590:	ba 17       	cp	r27, r26
 592:	62 07       	cpc	r22, r18
 594:	73 07       	cpc	r23, r19
 596:	84 07       	cpc	r24, r20
 598:	95 07       	cpc	r25, r21
 59a:	18 f0       	brcs	.+6      	; 0x5a2 <__addsf3x+0x18>
 59c:	71 f4       	brne	.+28     	; 0x5ba <__addsf3x+0x30>
 59e:	9e f5       	brtc	.+102    	; 0x606 <__addsf3x+0x7c>
 5a0:	67 c1       	rjmp	.+718    	; 0x870 <__fp_zero>
 5a2:	0e f4       	brtc	.+2      	; 0x5a6 <__addsf3x+0x1c>
 5a4:	e0 95       	com	r30
 5a6:	0b 2e       	mov	r0, r27
 5a8:	ba 2f       	mov	r27, r26
 5aa:	a0 2d       	mov	r26, r0
 5ac:	0b 01       	movw	r0, r22
 5ae:	b9 01       	movw	r22, r18
 5b0:	90 01       	movw	r18, r0
 5b2:	0c 01       	movw	r0, r24
 5b4:	ca 01       	movw	r24, r20
 5b6:	a0 01       	movw	r20, r0
 5b8:	11 24       	eor	r1, r1
 5ba:	ff 27       	eor	r31, r31
 5bc:	59 1b       	sub	r21, r25
 5be:	99 f0       	breq	.+38     	; 0x5e6 <__addsf3x+0x5c>
 5c0:	59 3f       	cpi	r21, 0xF9	; 249
 5c2:	50 f4       	brcc	.+20     	; 0x5d8 <__addsf3x+0x4e>
 5c4:	50 3e       	cpi	r21, 0xE0	; 224
 5c6:	68 f1       	brcs	.+90     	; 0x622 <__addsf3x+0x98>
 5c8:	1a 16       	cp	r1, r26
 5ca:	f0 40       	sbci	r31, 0x00	; 0
 5cc:	a2 2f       	mov	r26, r18
 5ce:	23 2f       	mov	r18, r19
 5d0:	34 2f       	mov	r19, r20
 5d2:	44 27       	eor	r20, r20
 5d4:	58 5f       	subi	r21, 0xF8	; 248
 5d6:	f3 cf       	rjmp	.-26     	; 0x5be <__addsf3x+0x34>
 5d8:	46 95       	lsr	r20
 5da:	37 95       	ror	r19
 5dc:	27 95       	ror	r18
 5de:	a7 95       	ror	r26
 5e0:	f0 40       	sbci	r31, 0x00	; 0
 5e2:	53 95       	inc	r21
 5e4:	c9 f7       	brne	.-14     	; 0x5d8 <__addsf3x+0x4e>
 5e6:	7e f4       	brtc	.+30     	; 0x606 <__addsf3x+0x7c>
 5e8:	1f 16       	cp	r1, r31
 5ea:	ba 0b       	sbc	r27, r26
 5ec:	62 0b       	sbc	r22, r18
 5ee:	73 0b       	sbc	r23, r19
 5f0:	84 0b       	sbc	r24, r20
 5f2:	ba f0       	brmi	.+46     	; 0x622 <__addsf3x+0x98>
 5f4:	91 50       	subi	r25, 0x01	; 1
 5f6:	a1 f0       	breq	.+40     	; 0x620 <__addsf3x+0x96>
 5f8:	ff 0f       	add	r31, r31
 5fa:	bb 1f       	adc	r27, r27
 5fc:	66 1f       	adc	r22, r22
 5fe:	77 1f       	adc	r23, r23
 600:	88 1f       	adc	r24, r24
 602:	c2 f7       	brpl	.-16     	; 0x5f4 <__addsf3x+0x6a>
 604:	0e c0       	rjmp	.+28     	; 0x622 <__addsf3x+0x98>
 606:	ba 0f       	add	r27, r26
 608:	62 1f       	adc	r22, r18
 60a:	73 1f       	adc	r23, r19
 60c:	84 1f       	adc	r24, r20
 60e:	48 f4       	brcc	.+18     	; 0x622 <__addsf3x+0x98>
 610:	87 95       	ror	r24
 612:	77 95       	ror	r23
 614:	67 95       	ror	r22
 616:	b7 95       	ror	r27
 618:	f7 95       	ror	r31
 61a:	9e 3f       	cpi	r25, 0xFE	; 254
 61c:	08 f0       	brcs	.+2      	; 0x620 <__addsf3x+0x96>
 61e:	b3 cf       	rjmp	.-154    	; 0x586 <__addsf3+0x1e>
 620:	93 95       	inc	r25
 622:	88 0f       	add	r24, r24
 624:	08 f0       	brcs	.+2      	; 0x628 <__addsf3x+0x9e>
 626:	99 27       	eor	r25, r25
 628:	ee 0f       	add	r30, r30
 62a:	97 95       	ror	r25
 62c:	87 95       	ror	r24
 62e:	08 95       	ret

00000630 <__divsf3>:
 630:	0c d0       	rcall	.+24     	; 0x64a <__divsf3x>
 632:	eb c0       	rjmp	.+470    	; 0x80a <__fp_round>
 634:	e3 d0       	rcall	.+454    	; 0x7fc <__fp_pscB>
 636:	40 f0       	brcs	.+16     	; 0x648 <__divsf3+0x18>
 638:	da d0       	rcall	.+436    	; 0x7ee <__fp_pscA>
 63a:	30 f0       	brcs	.+12     	; 0x648 <__divsf3+0x18>
 63c:	21 f4       	brne	.+8      	; 0x646 <__divsf3+0x16>
 63e:	5f 3f       	cpi	r21, 0xFF	; 255
 640:	19 f0       	breq	.+6      	; 0x648 <__divsf3+0x18>
 642:	cc c0       	rjmp	.+408    	; 0x7dc <__fp_inf>
 644:	51 11       	cpse	r21, r1
 646:	15 c1       	rjmp	.+554    	; 0x872 <__fp_szero>
 648:	cf c0       	rjmp	.+414    	; 0x7e8 <__fp_nan>

0000064a <__divsf3x>:
 64a:	f0 d0       	rcall	.+480    	; 0x82c <__fp_split3>
 64c:	98 f3       	brcs	.-26     	; 0x634 <__divsf3+0x4>

0000064e <__divsf3_pse>:
 64e:	99 23       	and	r25, r25
 650:	c9 f3       	breq	.-14     	; 0x644 <__divsf3+0x14>
 652:	55 23       	and	r21, r21
 654:	b1 f3       	breq	.-20     	; 0x642 <__divsf3+0x12>
 656:	95 1b       	sub	r25, r21
 658:	55 0b       	sbc	r21, r21
 65a:	bb 27       	eor	r27, r27
 65c:	aa 27       	eor	r26, r26
 65e:	62 17       	cp	r22, r18
 660:	73 07       	cpc	r23, r19
 662:	84 07       	cpc	r24, r20
 664:	38 f0       	brcs	.+14     	; 0x674 <__divsf3_pse+0x26>
 666:	9f 5f       	subi	r25, 0xFF	; 255
 668:	5f 4f       	sbci	r21, 0xFF	; 255
 66a:	22 0f       	add	r18, r18
 66c:	33 1f       	adc	r19, r19
 66e:	44 1f       	adc	r20, r20
 670:	aa 1f       	adc	r26, r26
 672:	a9 f3       	breq	.-22     	; 0x65e <__divsf3_pse+0x10>
 674:	33 d0       	rcall	.+102    	; 0x6dc <__divsf3_pse+0x8e>
 676:	0e 2e       	mov	r0, r30
 678:	3a f0       	brmi	.+14     	; 0x688 <__divsf3_pse+0x3a>
 67a:	e0 e8       	ldi	r30, 0x80	; 128
 67c:	30 d0       	rcall	.+96     	; 0x6de <__divsf3_pse+0x90>
 67e:	91 50       	subi	r25, 0x01	; 1
 680:	50 40       	sbci	r21, 0x00	; 0
 682:	e6 95       	lsr	r30
 684:	00 1c       	adc	r0, r0
 686:	ca f7       	brpl	.-14     	; 0x67a <__divsf3_pse+0x2c>
 688:	29 d0       	rcall	.+82     	; 0x6dc <__divsf3_pse+0x8e>
 68a:	fe 2f       	mov	r31, r30
 68c:	27 d0       	rcall	.+78     	; 0x6dc <__divsf3_pse+0x8e>
 68e:	66 0f       	add	r22, r22
 690:	77 1f       	adc	r23, r23
 692:	88 1f       	adc	r24, r24
 694:	bb 1f       	adc	r27, r27
 696:	26 17       	cp	r18, r22
 698:	37 07       	cpc	r19, r23
 69a:	48 07       	cpc	r20, r24
 69c:	ab 07       	cpc	r26, r27
 69e:	b0 e8       	ldi	r27, 0x80	; 128
 6a0:	09 f0       	breq	.+2      	; 0x6a4 <__divsf3_pse+0x56>
 6a2:	bb 0b       	sbc	r27, r27
 6a4:	80 2d       	mov	r24, r0
 6a6:	bf 01       	movw	r22, r30
 6a8:	ff 27       	eor	r31, r31
 6aa:	93 58       	subi	r25, 0x83	; 131
 6ac:	5f 4f       	sbci	r21, 0xFF	; 255
 6ae:	2a f0       	brmi	.+10     	; 0x6ba <__divsf3_pse+0x6c>
 6b0:	9e 3f       	cpi	r25, 0xFE	; 254
 6b2:	51 05       	cpc	r21, r1
 6b4:	68 f0       	brcs	.+26     	; 0x6d0 <__divsf3_pse+0x82>
 6b6:	92 c0       	rjmp	.+292    	; 0x7dc <__fp_inf>
 6b8:	dc c0       	rjmp	.+440    	; 0x872 <__fp_szero>
 6ba:	5f 3f       	cpi	r21, 0xFF	; 255
 6bc:	ec f3       	brlt	.-6      	; 0x6b8 <__divsf3_pse+0x6a>
 6be:	98 3e       	cpi	r25, 0xE8	; 232
 6c0:	dc f3       	brlt	.-10     	; 0x6b8 <__divsf3_pse+0x6a>
 6c2:	86 95       	lsr	r24
 6c4:	77 95       	ror	r23
 6c6:	67 95       	ror	r22
 6c8:	b7 95       	ror	r27
 6ca:	f7 95       	ror	r31
 6cc:	9f 5f       	subi	r25, 0xFF	; 255
 6ce:	c9 f7       	brne	.-14     	; 0x6c2 <__divsf3_pse+0x74>
 6d0:	88 0f       	add	r24, r24
 6d2:	91 1d       	adc	r25, r1
 6d4:	96 95       	lsr	r25
 6d6:	87 95       	ror	r24
 6d8:	97 f9       	bld	r25, 7
 6da:	08 95       	ret
 6dc:	e1 e0       	ldi	r30, 0x01	; 1
 6de:	66 0f       	add	r22, r22
 6e0:	77 1f       	adc	r23, r23
 6e2:	88 1f       	adc	r24, r24
 6e4:	bb 1f       	adc	r27, r27
 6e6:	62 17       	cp	r22, r18
 6e8:	73 07       	cpc	r23, r19
 6ea:	84 07       	cpc	r24, r20
 6ec:	ba 07       	cpc	r27, r26
 6ee:	20 f0       	brcs	.+8      	; 0x6f8 <__divsf3_pse+0xaa>
 6f0:	62 1b       	sub	r22, r18
 6f2:	73 0b       	sbc	r23, r19
 6f4:	84 0b       	sbc	r24, r20
 6f6:	ba 0b       	sbc	r27, r26
 6f8:	ee 1f       	adc	r30, r30
 6fa:	88 f7       	brcc	.-30     	; 0x6de <__divsf3_pse+0x90>
 6fc:	e0 95       	com	r30
 6fe:	08 95       	ret

00000700 <__fixsfsi>:
 700:	04 d0       	rcall	.+8      	; 0x70a <__fixunssfsi>
 702:	68 94       	set
 704:	b1 11       	cpse	r27, r1
 706:	b5 c0       	rjmp	.+362    	; 0x872 <__fp_szero>
 708:	08 95       	ret

0000070a <__fixunssfsi>:
 70a:	98 d0       	rcall	.+304    	; 0x83c <__fp_splitA>
 70c:	88 f0       	brcs	.+34     	; 0x730 <__fixunssfsi+0x26>
 70e:	9f 57       	subi	r25, 0x7F	; 127
 710:	90 f0       	brcs	.+36     	; 0x736 <__fixunssfsi+0x2c>
 712:	b9 2f       	mov	r27, r25
 714:	99 27       	eor	r25, r25
 716:	b7 51       	subi	r27, 0x17	; 23
 718:	a0 f0       	brcs	.+40     	; 0x742 <__fixunssfsi+0x38>
 71a:	d1 f0       	breq	.+52     	; 0x750 <__fixunssfsi+0x46>
 71c:	66 0f       	add	r22, r22
 71e:	77 1f       	adc	r23, r23
 720:	88 1f       	adc	r24, r24
 722:	99 1f       	adc	r25, r25
 724:	1a f0       	brmi	.+6      	; 0x72c <__fixunssfsi+0x22>
 726:	ba 95       	dec	r27
 728:	c9 f7       	brne	.-14     	; 0x71c <__fixunssfsi+0x12>
 72a:	12 c0       	rjmp	.+36     	; 0x750 <__fixunssfsi+0x46>
 72c:	b1 30       	cpi	r27, 0x01	; 1
 72e:	81 f0       	breq	.+32     	; 0x750 <__fixunssfsi+0x46>
 730:	9f d0       	rcall	.+318    	; 0x870 <__fp_zero>
 732:	b1 e0       	ldi	r27, 0x01	; 1
 734:	08 95       	ret
 736:	9c c0       	rjmp	.+312    	; 0x870 <__fp_zero>
 738:	67 2f       	mov	r22, r23
 73a:	78 2f       	mov	r23, r24
 73c:	88 27       	eor	r24, r24
 73e:	b8 5f       	subi	r27, 0xF8	; 248
 740:	39 f0       	breq	.+14     	; 0x750 <__fixunssfsi+0x46>
 742:	b9 3f       	cpi	r27, 0xF9	; 249
 744:	cc f3       	brlt	.-14     	; 0x738 <__fixunssfsi+0x2e>
 746:	86 95       	lsr	r24
 748:	77 95       	ror	r23
 74a:	67 95       	ror	r22
 74c:	b3 95       	inc	r27
 74e:	d9 f7       	brne	.-10     	; 0x746 <__fixunssfsi+0x3c>
 750:	3e f4       	brtc	.+14     	; 0x760 <__fixunssfsi+0x56>
 752:	90 95       	com	r25
 754:	80 95       	com	r24
 756:	70 95       	com	r23
 758:	61 95       	neg	r22
 75a:	7f 4f       	sbci	r23, 0xFF	; 255
 75c:	8f 4f       	sbci	r24, 0xFF	; 255
 75e:	9f 4f       	sbci	r25, 0xFF	; 255
 760:	08 95       	ret

00000762 <__floatunsisf>:
 762:	e8 94       	clt
 764:	09 c0       	rjmp	.+18     	; 0x778 <__floatsisf+0x12>

00000766 <__floatsisf>:
 766:	97 fb       	bst	r25, 7
 768:	3e f4       	brtc	.+14     	; 0x778 <__floatsisf+0x12>
 76a:	90 95       	com	r25
 76c:	80 95       	com	r24
 76e:	70 95       	com	r23
 770:	61 95       	neg	r22
 772:	7f 4f       	sbci	r23, 0xFF	; 255
 774:	8f 4f       	sbci	r24, 0xFF	; 255
 776:	9f 4f       	sbci	r25, 0xFF	; 255
 778:	99 23       	and	r25, r25
 77a:	a9 f0       	breq	.+42     	; 0x7a6 <__floatsisf+0x40>
 77c:	f9 2f       	mov	r31, r25
 77e:	96 e9       	ldi	r25, 0x96	; 150
 780:	bb 27       	eor	r27, r27
 782:	93 95       	inc	r25
 784:	f6 95       	lsr	r31
 786:	87 95       	ror	r24
 788:	77 95       	ror	r23
 78a:	67 95       	ror	r22
 78c:	b7 95       	ror	r27
 78e:	f1 11       	cpse	r31, r1
 790:	f8 cf       	rjmp	.-16     	; 0x782 <__floatsisf+0x1c>
 792:	fa f4       	brpl	.+62     	; 0x7d2 <__floatsisf+0x6c>
 794:	bb 0f       	add	r27, r27
 796:	11 f4       	brne	.+4      	; 0x79c <__floatsisf+0x36>
 798:	60 ff       	sbrs	r22, 0
 79a:	1b c0       	rjmp	.+54     	; 0x7d2 <__floatsisf+0x6c>
 79c:	6f 5f       	subi	r22, 0xFF	; 255
 79e:	7f 4f       	sbci	r23, 0xFF	; 255
 7a0:	8f 4f       	sbci	r24, 0xFF	; 255
 7a2:	9f 4f       	sbci	r25, 0xFF	; 255
 7a4:	16 c0       	rjmp	.+44     	; 0x7d2 <__floatsisf+0x6c>
 7a6:	88 23       	and	r24, r24
 7a8:	11 f0       	breq	.+4      	; 0x7ae <__floatsisf+0x48>
 7aa:	96 e9       	ldi	r25, 0x96	; 150
 7ac:	11 c0       	rjmp	.+34     	; 0x7d0 <__floatsisf+0x6a>
 7ae:	77 23       	and	r23, r23
 7b0:	21 f0       	breq	.+8      	; 0x7ba <__floatsisf+0x54>
 7b2:	9e e8       	ldi	r25, 0x8E	; 142
 7b4:	87 2f       	mov	r24, r23
 7b6:	76 2f       	mov	r23, r22
 7b8:	05 c0       	rjmp	.+10     	; 0x7c4 <__floatsisf+0x5e>
 7ba:	66 23       	and	r22, r22
 7bc:	71 f0       	breq	.+28     	; 0x7da <__floatsisf+0x74>
 7be:	96 e8       	ldi	r25, 0x86	; 134
 7c0:	86 2f       	mov	r24, r22
 7c2:	70 e0       	ldi	r23, 0x00	; 0
 7c4:	60 e0       	ldi	r22, 0x00	; 0
 7c6:	2a f0       	brmi	.+10     	; 0x7d2 <__floatsisf+0x6c>
 7c8:	9a 95       	dec	r25
 7ca:	66 0f       	add	r22, r22
 7cc:	77 1f       	adc	r23, r23
 7ce:	88 1f       	adc	r24, r24
 7d0:	da f7       	brpl	.-10     	; 0x7c8 <__floatsisf+0x62>
 7d2:	88 0f       	add	r24, r24
 7d4:	96 95       	lsr	r25
 7d6:	87 95       	ror	r24
 7d8:	97 f9       	bld	r25, 7
 7da:	08 95       	ret

000007dc <__fp_inf>:
 7dc:	97 f9       	bld	r25, 7
 7de:	9f 67       	ori	r25, 0x7F	; 127
 7e0:	80 e8       	ldi	r24, 0x80	; 128
 7e2:	70 e0       	ldi	r23, 0x00	; 0
 7e4:	60 e0       	ldi	r22, 0x00	; 0
 7e6:	08 95       	ret

000007e8 <__fp_nan>:
 7e8:	9f ef       	ldi	r25, 0xFF	; 255
 7ea:	80 ec       	ldi	r24, 0xC0	; 192
 7ec:	08 95       	ret

000007ee <__fp_pscA>:
 7ee:	00 24       	eor	r0, r0
 7f0:	0a 94       	dec	r0
 7f2:	16 16       	cp	r1, r22
 7f4:	17 06       	cpc	r1, r23
 7f6:	18 06       	cpc	r1, r24
 7f8:	09 06       	cpc	r0, r25
 7fa:	08 95       	ret

000007fc <__fp_pscB>:
 7fc:	00 24       	eor	r0, r0
 7fe:	0a 94       	dec	r0
 800:	12 16       	cp	r1, r18
 802:	13 06       	cpc	r1, r19
 804:	14 06       	cpc	r1, r20
 806:	05 06       	cpc	r0, r21
 808:	08 95       	ret

0000080a <__fp_round>:
 80a:	09 2e       	mov	r0, r25
 80c:	03 94       	inc	r0
 80e:	00 0c       	add	r0, r0
 810:	11 f4       	brne	.+4      	; 0x816 <__fp_round+0xc>
 812:	88 23       	and	r24, r24
 814:	52 f0       	brmi	.+20     	; 0x82a <__fp_round+0x20>
 816:	bb 0f       	add	r27, r27
 818:	40 f4       	brcc	.+16     	; 0x82a <__fp_round+0x20>
 81a:	bf 2b       	or	r27, r31
 81c:	11 f4       	brne	.+4      	; 0x822 <__fp_round+0x18>
 81e:	60 ff       	sbrs	r22, 0
 820:	04 c0       	rjmp	.+8      	; 0x82a <__fp_round+0x20>
 822:	6f 5f       	subi	r22, 0xFF	; 255
 824:	7f 4f       	sbci	r23, 0xFF	; 255
 826:	8f 4f       	sbci	r24, 0xFF	; 255
 828:	9f 4f       	sbci	r25, 0xFF	; 255
 82a:	08 95       	ret

0000082c <__fp_split3>:
 82c:	57 fd       	sbrc	r21, 7
 82e:	90 58       	subi	r25, 0x80	; 128
 830:	44 0f       	add	r20, r20
 832:	55 1f       	adc	r21, r21
 834:	59 f0       	breq	.+22     	; 0x84c <__fp_splitA+0x10>
 836:	5f 3f       	cpi	r21, 0xFF	; 255
 838:	71 f0       	breq	.+28     	; 0x856 <__fp_splitA+0x1a>
 83a:	47 95       	ror	r20

0000083c <__fp_splitA>:
 83c:	88 0f       	add	r24, r24
 83e:	97 fb       	bst	r25, 7
 840:	99 1f       	adc	r25, r25
 842:	61 f0       	breq	.+24     	; 0x85c <__fp_splitA+0x20>
 844:	9f 3f       	cpi	r25, 0xFF	; 255
 846:	79 f0       	breq	.+30     	; 0x866 <__fp_splitA+0x2a>
 848:	87 95       	ror	r24
 84a:	08 95       	ret
 84c:	12 16       	cp	r1, r18
 84e:	13 06       	cpc	r1, r19
 850:	14 06       	cpc	r1, r20
 852:	55 1f       	adc	r21, r21
 854:	f2 cf       	rjmp	.-28     	; 0x83a <__fp_split3+0xe>
 856:	46 95       	lsr	r20
 858:	f1 df       	rcall	.-30     	; 0x83c <__fp_splitA>
 85a:	08 c0       	rjmp	.+16     	; 0x86c <__fp_splitA+0x30>
 85c:	16 16       	cp	r1, r22
 85e:	17 06       	cpc	r1, r23
 860:	18 06       	cpc	r1, r24
 862:	99 1f       	adc	r25, r25
 864:	f1 cf       	rjmp	.-30     	; 0x848 <__fp_splitA+0xc>
 866:	86 95       	lsr	r24
 868:	71 05       	cpc	r23, r1
 86a:	61 05       	cpc	r22, r1
 86c:	08 94       	sec
 86e:	08 95       	ret

00000870 <__fp_zero>:
 870:	e8 94       	clt

00000872 <__fp_szero>:
 872:	bb 27       	eor	r27, r27
 874:	66 27       	eor	r22, r22
 876:	77 27       	eor	r23, r23
 878:	cb 01       	movw	r24, r22
 87a:	97 f9       	bld	r25, 7
 87c:	08 95       	ret

0000087e <__mulsf3>:
 87e:	0b d0       	rcall	.+22     	; 0x896 <__mulsf3x>
 880:	c4 cf       	rjmp	.-120    	; 0x80a <__fp_round>
 882:	b5 df       	rcall	.-150    	; 0x7ee <__fp_pscA>
 884:	28 f0       	brcs	.+10     	; 0x890 <__mulsf3+0x12>
 886:	ba df       	rcall	.-140    	; 0x7fc <__fp_pscB>
 888:	18 f0       	brcs	.+6      	; 0x890 <__mulsf3+0x12>
 88a:	95 23       	and	r25, r21
 88c:	09 f0       	breq	.+2      	; 0x890 <__mulsf3+0x12>
 88e:	a6 cf       	rjmp	.-180    	; 0x7dc <__fp_inf>
 890:	ab cf       	rjmp	.-170    	; 0x7e8 <__fp_nan>
 892:	11 24       	eor	r1, r1
 894:	ee cf       	rjmp	.-36     	; 0x872 <__fp_szero>

00000896 <__mulsf3x>:
 896:	ca df       	rcall	.-108    	; 0x82c <__fp_split3>
 898:	a0 f3       	brcs	.-24     	; 0x882 <__mulsf3+0x4>

0000089a <__mulsf3_pse>:
 89a:	95 9f       	mul	r25, r21
 89c:	d1 f3       	breq	.-12     	; 0x892 <__mulsf3+0x14>
 89e:	95 0f       	add	r25, r21
 8a0:	50 e0       	ldi	r21, 0x00	; 0
 8a2:	55 1f       	adc	r21, r21
 8a4:	62 9f       	mul	r22, r18
 8a6:	f0 01       	movw	r30, r0
 8a8:	72 9f       	mul	r23, r18
 8aa:	bb 27       	eor	r27, r27
 8ac:	f0 0d       	add	r31, r0
 8ae:	b1 1d       	adc	r27, r1
 8b0:	63 9f       	mul	r22, r19
 8b2:	aa 27       	eor	r26, r26
 8b4:	f0 0d       	add	r31, r0
 8b6:	b1 1d       	adc	r27, r1
 8b8:	aa 1f       	adc	r26, r26
 8ba:	64 9f       	mul	r22, r20
 8bc:	66 27       	eor	r22, r22
 8be:	b0 0d       	add	r27, r0
 8c0:	a1 1d       	adc	r26, r1
 8c2:	66 1f       	adc	r22, r22
 8c4:	82 9f       	mul	r24, r18
 8c6:	22 27       	eor	r18, r18
 8c8:	b0 0d       	add	r27, r0
 8ca:	a1 1d       	adc	r26, r1
 8cc:	62 1f       	adc	r22, r18
 8ce:	73 9f       	mul	r23, r19
 8d0:	b0 0d       	add	r27, r0
 8d2:	a1 1d       	adc	r26, r1
 8d4:	62 1f       	adc	r22, r18
 8d6:	83 9f       	mul	r24, r19
 8d8:	a0 0d       	add	r26, r0
 8da:	61 1d       	adc	r22, r1
 8dc:	22 1f       	adc	r18, r18
 8de:	74 9f       	mul	r23, r20
 8e0:	33 27       	eor	r19, r19
 8e2:	a0 0d       	add	r26, r0
 8e4:	61 1d       	adc	r22, r1
 8e6:	23 1f       	adc	r18, r19
 8e8:	84 9f       	mul	r24, r20
 8ea:	60 0d       	add	r22, r0
 8ec:	21 1d       	adc	r18, r1
 8ee:	82 2f       	mov	r24, r18
 8f0:	76 2f       	mov	r23, r22
 8f2:	6a 2f       	mov	r22, r26
 8f4:	11 24       	eor	r1, r1
 8f6:	9f 57       	subi	r25, 0x7F	; 127
 8f8:	50 40       	sbci	r21, 0x00	; 0
 8fa:	8a f0       	brmi	.+34     	; 0x91e <__mulsf3_pse+0x84>
 8fc:	e1 f0       	breq	.+56     	; 0x936 <__mulsf3_pse+0x9c>
 8fe:	88 23       	and	r24, r24
 900:	4a f0       	brmi	.+18     	; 0x914 <__mulsf3_pse+0x7a>
 902:	ee 0f       	add	r30, r30
 904:	ff 1f       	adc	r31, r31
 906:	bb 1f       	adc	r27, r27
 908:	66 1f       	adc	r22, r22
 90a:	77 1f       	adc	r23, r23
 90c:	88 1f       	adc	r24, r24
 90e:	91 50       	subi	r25, 0x01	; 1
 910:	50 40       	sbci	r21, 0x00	; 0
 912:	a9 f7       	brne	.-22     	; 0x8fe <__mulsf3_pse+0x64>
 914:	9e 3f       	cpi	r25, 0xFE	; 254
 916:	51 05       	cpc	r21, r1
 918:	70 f0       	brcs	.+28     	; 0x936 <__mulsf3_pse+0x9c>
 91a:	60 cf       	rjmp	.-320    	; 0x7dc <__fp_inf>
 91c:	aa cf       	rjmp	.-172    	; 0x872 <__fp_szero>
 91e:	5f 3f       	cpi	r21, 0xFF	; 255
 920:	ec f3       	brlt	.-6      	; 0x91c <__mulsf3_pse+0x82>
 922:	98 3e       	cpi	r25, 0xE8	; 232
 924:	dc f3       	brlt	.-10     	; 0x91c <__mulsf3_pse+0x82>
 926:	86 95       	lsr	r24
 928:	77 95       	ror	r23
 92a:	67 95       	ror	r22
 92c:	b7 95       	ror	r27
 92e:	f7 95       	ror	r31
 930:	e7 95       	ror	r30
 932:	9f 5f       	subi	r25, 0xFF	; 255
 934:	c1 f7       	brne	.-16     	; 0x926 <__mulsf3_pse+0x8c>
 936:	fe 2b       	or	r31, r30
 938:	88 0f       	add	r24, r24
 93a:	91 1d       	adc	r25, r1
 93c:	96 95       	lsr	r25
 93e:	87 95       	ror	r24
 940:	97 f9       	bld	r25, 7
 942:	08 95       	ret

00000944 <malloc>:
 944:	0f 93       	push	r16
 946:	1f 93       	push	r17
 948:	cf 93       	push	r28
 94a:	df 93       	push	r29
 94c:	82 30       	cpi	r24, 0x02	; 2
 94e:	91 05       	cpc	r25, r1
 950:	10 f4       	brcc	.+4      	; 0x956 <malloc+0x12>
 952:	82 e0       	ldi	r24, 0x02	; 2
 954:	90 e0       	ldi	r25, 0x00	; 0
 956:	e0 91 20 02 	lds	r30, 0x0220	; 0x800220 <__flp>
 95a:	f0 91 21 02 	lds	r31, 0x0221	; 0x800221 <__flp+0x1>
 95e:	20 e0       	ldi	r18, 0x00	; 0
 960:	30 e0       	ldi	r19, 0x00	; 0
 962:	a0 e0       	ldi	r26, 0x00	; 0
 964:	b0 e0       	ldi	r27, 0x00	; 0
 966:	30 97       	sbiw	r30, 0x00	; 0
 968:	19 f1       	breq	.+70     	; 0x9b0 <malloc+0x6c>
 96a:	40 81       	ld	r20, Z
 96c:	51 81       	ldd	r21, Z+1	; 0x01
 96e:	02 81       	ldd	r16, Z+2	; 0x02
 970:	13 81       	ldd	r17, Z+3	; 0x03
 972:	48 17       	cp	r20, r24
 974:	59 07       	cpc	r21, r25
 976:	c8 f0       	brcs	.+50     	; 0x9aa <malloc+0x66>
 978:	84 17       	cp	r24, r20
 97a:	95 07       	cpc	r25, r21
 97c:	69 f4       	brne	.+26     	; 0x998 <malloc+0x54>
 97e:	10 97       	sbiw	r26, 0x00	; 0
 980:	31 f0       	breq	.+12     	; 0x98e <malloc+0x4a>
 982:	12 96       	adiw	r26, 0x02	; 2
 984:	0c 93       	st	X, r16
 986:	12 97       	sbiw	r26, 0x02	; 2
 988:	13 96       	adiw	r26, 0x03	; 3
 98a:	1c 93       	st	X, r17
 98c:	27 c0       	rjmp	.+78     	; 0x9dc <malloc+0x98>
 98e:	00 93 20 02 	sts	0x0220, r16	; 0x800220 <__flp>
 992:	10 93 21 02 	sts	0x0221, r17	; 0x800221 <__flp+0x1>
 996:	22 c0       	rjmp	.+68     	; 0x9dc <malloc+0x98>
 998:	21 15       	cp	r18, r1
 99a:	31 05       	cpc	r19, r1
 99c:	19 f0       	breq	.+6      	; 0x9a4 <malloc+0x60>
 99e:	42 17       	cp	r20, r18
 9a0:	53 07       	cpc	r21, r19
 9a2:	18 f4       	brcc	.+6      	; 0x9aa <malloc+0x66>
 9a4:	9a 01       	movw	r18, r20
 9a6:	bd 01       	movw	r22, r26
 9a8:	ef 01       	movw	r28, r30
 9aa:	df 01       	movw	r26, r30
 9ac:	f8 01       	movw	r30, r16
 9ae:	db cf       	rjmp	.-74     	; 0x966 <malloc+0x22>
 9b0:	21 15       	cp	r18, r1
 9b2:	31 05       	cpc	r19, r1
 9b4:	f9 f0       	breq	.+62     	; 0x9f4 <malloc+0xb0>
 9b6:	28 1b       	sub	r18, r24
 9b8:	39 0b       	sbc	r19, r25
 9ba:	24 30       	cpi	r18, 0x04	; 4
 9bc:	31 05       	cpc	r19, r1
 9be:	80 f4       	brcc	.+32     	; 0x9e0 <malloc+0x9c>
 9c0:	8a 81       	ldd	r24, Y+2	; 0x02
 9c2:	9b 81       	ldd	r25, Y+3	; 0x03
 9c4:	61 15       	cp	r22, r1
 9c6:	71 05       	cpc	r23, r1
 9c8:	21 f0       	breq	.+8      	; 0x9d2 <malloc+0x8e>
 9ca:	fb 01       	movw	r30, r22
 9cc:	93 83       	std	Z+3, r25	; 0x03
 9ce:	82 83       	std	Z+2, r24	; 0x02
 9d0:	04 c0       	rjmp	.+8      	; 0x9da <malloc+0x96>
 9d2:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <__flp+0x1>
 9d6:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <__flp>
 9da:	fe 01       	movw	r30, r28
 9dc:	32 96       	adiw	r30, 0x02	; 2
 9de:	44 c0       	rjmp	.+136    	; 0xa68 <malloc+0x124>
 9e0:	fe 01       	movw	r30, r28
 9e2:	e2 0f       	add	r30, r18
 9e4:	f3 1f       	adc	r31, r19
 9e6:	81 93       	st	Z+, r24
 9e8:	91 93       	st	Z+, r25
 9ea:	22 50       	subi	r18, 0x02	; 2
 9ec:	31 09       	sbc	r19, r1
 9ee:	39 83       	std	Y+1, r19	; 0x01
 9f0:	28 83       	st	Y, r18
 9f2:	3a c0       	rjmp	.+116    	; 0xa68 <malloc+0x124>
 9f4:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <__brkval>
 9f8:	30 91 1f 02 	lds	r19, 0x021F	; 0x80021f <__brkval+0x1>
 9fc:	23 2b       	or	r18, r19
 9fe:	41 f4       	brne	.+16     	; 0xa10 <malloc+0xcc>
 a00:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
 a04:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
 a08:	30 93 1f 02 	sts	0x021F, r19	; 0x80021f <__brkval+0x1>
 a0c:	20 93 1e 02 	sts	0x021E, r18	; 0x80021e <__brkval>
 a10:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 a14:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 a18:	21 15       	cp	r18, r1
 a1a:	31 05       	cpc	r19, r1
 a1c:	41 f4       	brne	.+16     	; 0xa2e <malloc+0xea>
 a1e:	2d b7       	in	r18, 0x3d	; 61
 a20:	3e b7       	in	r19, 0x3e	; 62
 a22:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
 a26:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
 a2a:	24 1b       	sub	r18, r20
 a2c:	35 0b       	sbc	r19, r21
 a2e:	e0 91 1e 02 	lds	r30, 0x021E	; 0x80021e <__brkval>
 a32:	f0 91 1f 02 	lds	r31, 0x021F	; 0x80021f <__brkval+0x1>
 a36:	e2 17       	cp	r30, r18
 a38:	f3 07       	cpc	r31, r19
 a3a:	a0 f4       	brcc	.+40     	; 0xa64 <malloc+0x120>
 a3c:	2e 1b       	sub	r18, r30
 a3e:	3f 0b       	sbc	r19, r31
 a40:	28 17       	cp	r18, r24
 a42:	39 07       	cpc	r19, r25
 a44:	78 f0       	brcs	.+30     	; 0xa64 <malloc+0x120>
 a46:	ac 01       	movw	r20, r24
 a48:	4e 5f       	subi	r20, 0xFE	; 254
 a4a:	5f 4f       	sbci	r21, 0xFF	; 255
 a4c:	24 17       	cp	r18, r20
 a4e:	35 07       	cpc	r19, r21
 a50:	48 f0       	brcs	.+18     	; 0xa64 <malloc+0x120>
 a52:	4e 0f       	add	r20, r30
 a54:	5f 1f       	adc	r21, r31
 a56:	50 93 1f 02 	sts	0x021F, r21	; 0x80021f <__brkval+0x1>
 a5a:	40 93 1e 02 	sts	0x021E, r20	; 0x80021e <__brkval>
 a5e:	81 93       	st	Z+, r24
 a60:	91 93       	st	Z+, r25
 a62:	02 c0       	rjmp	.+4      	; 0xa68 <malloc+0x124>
 a64:	e0 e0       	ldi	r30, 0x00	; 0
 a66:	f0 e0       	ldi	r31, 0x00	; 0
 a68:	cf 01       	movw	r24, r30
 a6a:	df 91       	pop	r29
 a6c:	cf 91       	pop	r28
 a6e:	1f 91       	pop	r17
 a70:	0f 91       	pop	r16
 a72:	08 95       	ret

00000a74 <free>:
 a74:	cf 93       	push	r28
 a76:	df 93       	push	r29
 a78:	00 97       	sbiw	r24, 0x00	; 0
 a7a:	09 f4       	brne	.+2      	; 0xa7e <free+0xa>
 a7c:	81 c0       	rjmp	.+258    	; 0xb80 <free+0x10c>
 a7e:	fc 01       	movw	r30, r24
 a80:	32 97       	sbiw	r30, 0x02	; 2
 a82:	13 82       	std	Z+3, r1	; 0x03
 a84:	12 82       	std	Z+2, r1	; 0x02
 a86:	a0 91 20 02 	lds	r26, 0x0220	; 0x800220 <__flp>
 a8a:	b0 91 21 02 	lds	r27, 0x0221	; 0x800221 <__flp+0x1>
 a8e:	10 97       	sbiw	r26, 0x00	; 0
 a90:	81 f4       	brne	.+32     	; 0xab2 <free+0x3e>
 a92:	20 81       	ld	r18, Z
 a94:	31 81       	ldd	r19, Z+1	; 0x01
 a96:	82 0f       	add	r24, r18
 a98:	93 1f       	adc	r25, r19
 a9a:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <__brkval>
 a9e:	30 91 1f 02 	lds	r19, 0x021F	; 0x80021f <__brkval+0x1>
 aa2:	28 17       	cp	r18, r24
 aa4:	39 07       	cpc	r19, r25
 aa6:	51 f5       	brne	.+84     	; 0xafc <free+0x88>
 aa8:	f0 93 1f 02 	sts	0x021F, r31	; 0x80021f <__brkval+0x1>
 aac:	e0 93 1e 02 	sts	0x021E, r30	; 0x80021e <__brkval>
 ab0:	67 c0       	rjmp	.+206    	; 0xb80 <free+0x10c>
 ab2:	ed 01       	movw	r28, r26
 ab4:	20 e0       	ldi	r18, 0x00	; 0
 ab6:	30 e0       	ldi	r19, 0x00	; 0
 ab8:	ce 17       	cp	r28, r30
 aba:	df 07       	cpc	r29, r31
 abc:	40 f4       	brcc	.+16     	; 0xace <free+0x5a>
 abe:	4a 81       	ldd	r20, Y+2	; 0x02
 ac0:	5b 81       	ldd	r21, Y+3	; 0x03
 ac2:	9e 01       	movw	r18, r28
 ac4:	41 15       	cp	r20, r1
 ac6:	51 05       	cpc	r21, r1
 ac8:	f1 f0       	breq	.+60     	; 0xb06 <free+0x92>
 aca:	ea 01       	movw	r28, r20
 acc:	f5 cf       	rjmp	.-22     	; 0xab8 <free+0x44>
 ace:	d3 83       	std	Z+3, r29	; 0x03
 ad0:	c2 83       	std	Z+2, r28	; 0x02
 ad2:	40 81       	ld	r20, Z
 ad4:	51 81       	ldd	r21, Z+1	; 0x01
 ad6:	84 0f       	add	r24, r20
 ad8:	95 1f       	adc	r25, r21
 ada:	c8 17       	cp	r28, r24
 adc:	d9 07       	cpc	r29, r25
 ade:	59 f4       	brne	.+22     	; 0xaf6 <free+0x82>
 ae0:	88 81       	ld	r24, Y
 ae2:	99 81       	ldd	r25, Y+1	; 0x01
 ae4:	84 0f       	add	r24, r20
 ae6:	95 1f       	adc	r25, r21
 ae8:	02 96       	adiw	r24, 0x02	; 2
 aea:	91 83       	std	Z+1, r25	; 0x01
 aec:	80 83       	st	Z, r24
 aee:	8a 81       	ldd	r24, Y+2	; 0x02
 af0:	9b 81       	ldd	r25, Y+3	; 0x03
 af2:	93 83       	std	Z+3, r25	; 0x03
 af4:	82 83       	std	Z+2, r24	; 0x02
 af6:	21 15       	cp	r18, r1
 af8:	31 05       	cpc	r19, r1
 afa:	29 f4       	brne	.+10     	; 0xb06 <free+0x92>
 afc:	f0 93 21 02 	sts	0x0221, r31	; 0x800221 <__flp+0x1>
 b00:	e0 93 20 02 	sts	0x0220, r30	; 0x800220 <__flp>
 b04:	3d c0       	rjmp	.+122    	; 0xb80 <free+0x10c>
 b06:	e9 01       	movw	r28, r18
 b08:	fb 83       	std	Y+3, r31	; 0x03
 b0a:	ea 83       	std	Y+2, r30	; 0x02
 b0c:	49 91       	ld	r20, Y+
 b0e:	59 91       	ld	r21, Y+
 b10:	c4 0f       	add	r28, r20
 b12:	d5 1f       	adc	r29, r21
 b14:	ec 17       	cp	r30, r28
 b16:	fd 07       	cpc	r31, r29
 b18:	61 f4       	brne	.+24     	; 0xb32 <free+0xbe>
 b1a:	80 81       	ld	r24, Z
 b1c:	91 81       	ldd	r25, Z+1	; 0x01
 b1e:	84 0f       	add	r24, r20
 b20:	95 1f       	adc	r25, r21
 b22:	02 96       	adiw	r24, 0x02	; 2
 b24:	e9 01       	movw	r28, r18
 b26:	99 83       	std	Y+1, r25	; 0x01
 b28:	88 83       	st	Y, r24
 b2a:	82 81       	ldd	r24, Z+2	; 0x02
 b2c:	93 81       	ldd	r25, Z+3	; 0x03
 b2e:	9b 83       	std	Y+3, r25	; 0x03
 b30:	8a 83       	std	Y+2, r24	; 0x02
 b32:	e0 e0       	ldi	r30, 0x00	; 0
 b34:	f0 e0       	ldi	r31, 0x00	; 0
 b36:	12 96       	adiw	r26, 0x02	; 2
 b38:	8d 91       	ld	r24, X+
 b3a:	9c 91       	ld	r25, X
 b3c:	13 97       	sbiw	r26, 0x03	; 3
 b3e:	00 97       	sbiw	r24, 0x00	; 0
 b40:	19 f0       	breq	.+6      	; 0xb48 <free+0xd4>
 b42:	fd 01       	movw	r30, r26
 b44:	dc 01       	movw	r26, r24
 b46:	f7 cf       	rjmp	.-18     	; 0xb36 <free+0xc2>
 b48:	8d 91       	ld	r24, X+
 b4a:	9c 91       	ld	r25, X
 b4c:	11 97       	sbiw	r26, 0x01	; 1
 b4e:	9d 01       	movw	r18, r26
 b50:	2e 5f       	subi	r18, 0xFE	; 254
 b52:	3f 4f       	sbci	r19, 0xFF	; 255
 b54:	82 0f       	add	r24, r18
 b56:	93 1f       	adc	r25, r19
 b58:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <__brkval>
 b5c:	30 91 1f 02 	lds	r19, 0x021F	; 0x80021f <__brkval+0x1>
 b60:	28 17       	cp	r18, r24
 b62:	39 07       	cpc	r19, r25
 b64:	69 f4       	brne	.+26     	; 0xb80 <free+0x10c>
 b66:	30 97       	sbiw	r30, 0x00	; 0
 b68:	29 f4       	brne	.+10     	; 0xb74 <free+0x100>
 b6a:	10 92 21 02 	sts	0x0221, r1	; 0x800221 <__flp+0x1>
 b6e:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <__flp>
 b72:	02 c0       	rjmp	.+4      	; 0xb78 <free+0x104>
 b74:	13 82       	std	Z+3, r1	; 0x03
 b76:	12 82       	std	Z+2, r1	; 0x02
 b78:	b0 93 1f 02 	sts	0x021F, r27	; 0x80021f <__brkval+0x1>
 b7c:	a0 93 1e 02 	sts	0x021E, r26	; 0x80021e <__brkval>
 b80:	df 91       	pop	r29
 b82:	cf 91       	pop	r28
 b84:	08 95       	ret

00000b86 <_exit>:
 b86:	f8 94       	cli

00000b88 <__stop_program>:
 b88:	ff cf       	rjmp	.-2      	; 0xb88 <__stop_program>
