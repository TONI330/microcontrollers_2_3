
Eindopdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800200  00000a10  00000aa4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a10  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800206  00800206  00000aaa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000aaa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000adc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000b1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001105  00000000  00000000  00000bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eb3  00000000  00000000  00001cc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000670  00000000  00000000  00002b7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000170  00000000  00000000  000031ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000714  00000000  00000000  0000335c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000304  00000000  00000000  00003a70  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  00003d74  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	97 c0       	rjmp	.+302    	; 0x174 <__vector_17>
  46:	00 00       	nop
  48:	a4 c0       	rjmp	.+328    	; 0x192 <__vector_18>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	39 c1       	rjmp	.+626    	; 0x2c8 <__vector_21>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 e1       	ldi	r30, 0x10	; 16
  fc:	fa e0       	ldi	r31, 0x0A	; 10
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a6 30       	cpi	r26, 0x06	; 6
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a6 e0       	ldi	r26, 0x06	; 6
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a2 32       	cpi	r26, 0x22	; 34
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	85 d0       	rcall	.+266    	; 0x22a <main>
 120:	75 c4       	rjmp	.+2282   	; 0xa0c <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <init_servos>:
}

int a = 300;

void control_drive(short percentage_speed, short percentage_turn)
{
 124:	86 e5       	ldi	r24, 0x56	; 86
 126:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7c0080>
 12a:	e1 e8       	ldi	r30, 0x81	; 129
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	80 81       	ld	r24, Z
 130:	82 61       	ori	r24, 0x12	; 18
 132:	80 83       	st	Z, r24
 134:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
 138:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
 13c:	80 e2       	ldi	r24, 0x20	; 32
 13e:	9e e4       	ldi	r25, 0x4E	; 78
 140:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7c0087>
 144:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7c0086>
 148:	84 e4       	ldi	r24, 0x44	; 68
 14a:	98 e4       	ldi	r25, 0x48	; 72
 14c:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 150:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 154:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
 158:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
 15c:	ef e6       	ldi	r30, 0x6F	; 111
 15e:	f0 e0       	ldi	r31, 0x00	; 0
 160:	80 81       	ld	r24, Z
 162:	82 60       	ori	r24, 0x02	; 2
 164:	80 83       	st	Z, r24
 166:	80 81       	ld	r24, Z
 168:	84 60       	ori	r24, 0x04	; 4
 16a:	80 83       	st	Z, r24
 16c:	84 b1       	in	r24, 0x04	; 4
 16e:	80 6c       	ori	r24, 0xC0	; 192
 170:	84 b9       	out	0x04, r24	; 4
 172:	08 95       	ret

00000174 <__vector_17>:
 174:	1f 92       	push	r1
 176:	0f 92       	push	r0
 178:	0f b6       	in	r0, 0x3f	; 63
 17a:	0f 92       	push	r0
 17c:	11 24       	eor	r1, r1
 17e:	8f 93       	push	r24
 180:	85 b1       	in	r24, 0x05	; 5
 182:	80 58       	subi	r24, 0x80	; 128
 184:	85 b9       	out	0x05, r24	; 5
 186:	8f 91       	pop	r24
 188:	0f 90       	pop	r0
 18a:	0f be       	out	0x3f, r0	; 63
 18c:	0f 90       	pop	r0
 18e:	1f 90       	pop	r1
 190:	18 95       	reti

00000192 <__vector_18>:
 192:	1f 92       	push	r1
 194:	0f 92       	push	r0
 196:	0f b6       	in	r0, 0x3f	; 63
 198:	0f 92       	push	r0
 19a:	11 24       	eor	r1, r1
 19c:	8f 93       	push	r24
 19e:	9f 93       	push	r25
 1a0:	95 b1       	in	r25, 0x05	; 5
 1a2:	80 e4       	ldi	r24, 0x40	; 64
 1a4:	89 27       	eor	r24, r25
 1a6:	85 b9       	out	0x05, r24	; 5
 1a8:	9f 91       	pop	r25
 1aa:	8f 91       	pop	r24
 1ac:	0f 90       	pop	r0
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	0f 90       	pop	r0
 1b2:	1f 90       	pop	r1
 1b4:	18 95       	reti

000001b6 <set_speed>:
	
}

void set_speed(short percentage, short motor)
{	
	if(motor == 0) 
 1b6:	67 2b       	or	r22, r23
 1b8:	e1 f4       	brne	.+56     	; 0x1f2 <set_speed+0x3c>
	{
		OCR1A = 20000 - (1300 + DRIVE_STEP_SIZE * percentage);
 1ba:	bc 01       	movw	r22, r24
 1bc:	99 0f       	add	r25, r25
 1be:	88 0b       	sbc	r24, r24
 1c0:	99 0b       	sbc	r25, r25
 1c2:	14 d2       	rcall	.+1064   	; 0x5ec <__floatsisf>
 1c4:	2d ec       	ldi	r18, 0xCD	; 205
 1c6:	3c ec       	ldi	r19, 0xCC	; 204
 1c8:	4c ec       	ldi	r20, 0xCC	; 204
 1ca:	5f e3       	ldi	r21, 0x3F	; 63
 1cc:	9b d2       	rcall	.+1334   	; 0x704 <__mulsf3>
 1ce:	20 e0       	ldi	r18, 0x00	; 0
 1d0:	30 e8       	ldi	r19, 0x80	; 128
 1d2:	42 ea       	ldi	r20, 0xA2	; 162
 1d4:	54 e4       	ldi	r21, 0x44	; 68
 1d6:	0b d1       	rcall	.+534    	; 0x3ee <__addsf3>
 1d8:	9b 01       	movw	r18, r22
 1da:	ac 01       	movw	r20, r24
 1dc:	60 e0       	ldi	r22, 0x00	; 0
 1de:	70 e4       	ldi	r23, 0x40	; 64
 1e0:	8c e9       	ldi	r24, 0x9C	; 156
 1e2:	96 e4       	ldi	r25, 0x46	; 70
 1e4:	03 d1       	rcall	.+518    	; 0x3ec <__subsf3>
 1e6:	d4 d1       	rcall	.+936    	; 0x590 <__fixunssfsi>
 1e8:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7c0089>
 1ec:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7c0088>
 1f0:	08 95       	ret
	}
	else
	{
		OCR1B = 20000 - (1300 + DRIVE_STEP_SIZE * percentage);
 1f2:	bc 01       	movw	r22, r24
 1f4:	99 0f       	add	r25, r25
 1f6:	88 0b       	sbc	r24, r24
 1f8:	99 0b       	sbc	r25, r25
 1fa:	f8 d1       	rcall	.+1008   	; 0x5ec <__floatsisf>
 1fc:	2d ec       	ldi	r18, 0xCD	; 205
 1fe:	3c ec       	ldi	r19, 0xCC	; 204
 200:	4c ec       	ldi	r20, 0xCC	; 204
 202:	5f e3       	ldi	r21, 0x3F	; 63
 204:	7f d2       	rcall	.+1278   	; 0x704 <__mulsf3>
 206:	20 e0       	ldi	r18, 0x00	; 0
 208:	30 e8       	ldi	r19, 0x80	; 128
 20a:	42 ea       	ldi	r20, 0xA2	; 162
 20c:	54 e4       	ldi	r21, 0x44	; 68
 20e:	ef d0       	rcall	.+478    	; 0x3ee <__addsf3>
 210:	9b 01       	movw	r18, r22
 212:	ac 01       	movw	r20, r24
 214:	60 e0       	ldi	r22, 0x00	; 0
 216:	70 e4       	ldi	r23, 0x40	; 64
 218:	8c e9       	ldi	r24, 0x9C	; 156
 21a:	96 e4       	ldi	r25, 0x46	; 70
 21c:	e7 d0       	rcall	.+462    	; 0x3ec <__subsf3>
 21e:	b8 d1       	rcall	.+880    	; 0x590 <__fixunssfsi>
 220:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7c008b>
 224:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7c008a>
 228:	08 95       	ret

0000022a <main>:
 22a:	78 94       	sei
}

int main(void)
{
	sei(); // Enable interrupts.
	DDRB = 0;
 22c:	14 b8       	out	0x04, r1	; 4
	
	init_servos();
 22e:	7a df       	rcall	.-268    	; 0x124 <init_servos>
	init_pwm();
 230:	22 d0       	rcall	.+68     	; 0x276 <init_pwm>
 232:	80 e1       	ldi	r24, 0x10	; 16
	
	int* test_value = malloc(16);
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	c9 d2       	rcall	.+1426   	; 0x7ca <malloc>
 238:	ec 01       	movw	r28, r24
 23a:	bc 01       	movw	r22, r24
	pwm_reader_add_pin(3, test_value);
 23c:	83 e0       	ldi	r24, 0x03	; 3
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	26 d0       	rcall	.+76     	; 0x28e <pwm_reader_add_pin>
 242:	68 81       	ld	r22, Y

    while (1) 
    {
		set_speed((*test_value - 180) / 180.0 * 100, 0);
 244:	79 81       	ldd	r23, Y+1	; 0x01
 246:	64 5b       	subi	r22, 0xB4	; 180
 248:	71 09       	sbc	r23, r1
 24a:	07 2e       	mov	r0, r23
 24c:	00 0c       	add	r0, r0
 24e:	88 0b       	sbc	r24, r24
 250:	99 0b       	sbc	r25, r25
 252:	cc d1       	rcall	.+920    	; 0x5ec <__floatsisf>
 254:	20 e0       	ldi	r18, 0x00	; 0
 256:	30 e0       	ldi	r19, 0x00	; 0
 258:	44 e3       	ldi	r20, 0x34	; 52
 25a:	53 e4       	ldi	r21, 0x43	; 67
 25c:	2c d1       	rcall	.+600    	; 0x4b6 <__divsf3>
 25e:	20 e0       	ldi	r18, 0x00	; 0
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	48 ec       	ldi	r20, 0xC8	; 200
 264:	52 e4       	ldi	r21, 0x42	; 66
 266:	4e d2       	rcall	.+1180   	; 0x704 <__mulsf3>
 268:	8e d1       	rcall	.+796    	; 0x586 <__fixsfsi>
 26a:	dc 01       	movw	r26, r24
 26c:	cb 01       	movw	r24, r22
 26e:	60 e0       	ldi	r22, 0x00	; 0
 270:	70 e0       	ldi	r23, 0x00	; 0
 272:	a1 df       	rcall	.-190    	; 0x1b6 <set_speed>
 274:	e6 cf       	rjmp	.-52     	; 0x242 <main+0x18>

00000276 <init_pwm>:
{
	 // Set up timer in PWM, Phase and frequency Correct mode.
	 //TCCR2A = 0b01010110;

	 // Set up timer with pre-scaler = 8 and PWM, Phase and frequency correct mode.
	 TCCR0B |= (1 << WGM13) | (1 << CS11);
 276:	85 b5       	in	r24, 0x25	; 37
 278:	82 61       	ori	r24, 0x12	; 18
 27a:	85 bd       	out	0x25, r24	; 37

	 // Initialize counter.
	 TCNT0 = 0;
 27c:	16 bc       	out	0x26, r1	; 38
	 //ICR1 = 20000;

	 // Initialize compare values.
	 OCR0A = TICKS_PER_MEASUREMENT;
 27e:	85 e0       	ldi	r24, 0x05	; 5
 280:	87 bd       	out	0x27, r24	; 39

	 // Enable compare interrupts.
	 TIMSK0 |= (1 << OCIE0A);
 282:	ee e6       	ldi	r30, 0x6E	; 110
 284:	f0 e0       	ldi	r31, 0x00	; 0
 286:	80 81       	ld	r24, Z
 288:	82 60       	ori	r24, 0x02	; 2
 28a:	80 83       	st	Z, r24
 28c:	08 95       	ret

0000028e <pwm_reader_add_pin>:
}

void pwm_reader_add_pin(int pin, int* out_ticks)
{
	input_pins[pin].output_pointer = out_ticks;
 28e:	fc 01       	movw	r30, r24
 290:	ee 0f       	add	r30, r30
 292:	ff 1f       	adc	r31, r31
 294:	8e 0f       	add	r24, r30
 296:	9f 1f       	adc	r25, r31
 298:	fc 01       	movw	r30, r24
 29a:	ea 5f       	subi	r30, 0xFA	; 250
 29c:	fd 4f       	sbci	r31, 0xFD	; 253
 29e:	71 83       	std	Z+1, r23	; 0x01
 2a0:	60 83       	st	Z, r22
	input_pins[pin].state = false;
 2a2:	12 82       	std	Z+2, r1	; 0x02
 2a4:	08 95       	ret

000002a6 <pin_is_high>:
	
	Returns true if the given pin is high, else false.
*/
bool pin_is_high(short pin_number)
{
	return PINB & (1 << pin_number);
 2a6:	93 b1       	in	r25, 0x03	; 3
 2a8:	21 e0       	ldi	r18, 0x01	; 1
 2aa:	30 e0       	ldi	r19, 0x00	; 0
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <pin_is_high+0xc>
 2ae:	22 0f       	add	r18, r18
 2b0:	33 1f       	adc	r19, r19
 2b2:	8a 95       	dec	r24
 2b4:	e2 f7       	brpl	.-8      	; 0x2ae <pin_is_high+0x8>
 2b6:	89 2f       	mov	r24, r25
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	28 23       	and	r18, r24
 2bc:	39 23       	and	r19, r25
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	23 2b       	or	r18, r19
 2c2:	09 f4       	brne	.+2      	; 0x2c6 <pin_is_high+0x20>
 2c4:	80 e0       	ldi	r24, 0x00	; 0
}
 2c6:	08 95       	ret

000002c8 <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
 2c8:	1f 92       	push	r1
 2ca:	0f 92       	push	r0
 2cc:	0f b6       	in	r0, 0x3f	; 63
 2ce:	0f 92       	push	r0
 2d0:	11 24       	eor	r1, r1
 2d2:	0b b6       	in	r0, 0x3b	; 59
 2d4:	0f 92       	push	r0
 2d6:	2f 93       	push	r18
 2d8:	3f 93       	push	r19
 2da:	4f 93       	push	r20
 2dc:	5f 93       	push	r21
 2de:	6f 93       	push	r22
 2e0:	7f 93       	push	r23
 2e2:	8f 93       	push	r24
 2e4:	9f 93       	push	r25
 2e6:	af 93       	push	r26
 2e8:	bf 93       	push	r27
 2ea:	cf 93       	push	r28
 2ec:	df 93       	push	r29
 2ee:	ef 93       	push	r30
 2f0:	ff 93       	push	r31
	for(int i = 0; i < 8; i++)
 2f2:	c0 e0       	ldi	r28, 0x00	; 0
 2f4:	d0 e0       	ldi	r29, 0x00	; 0
 2f6:	60 c0       	rjmp	.+192    	; 0x3b8 <__vector_21+0xf0>
	{
		if(input_pins[i].output_pointer == 0)
 2f8:	fe 01       	movw	r30, r28
 2fa:	ee 0f       	add	r30, r30
 2fc:	ff 1f       	adc	r31, r31
 2fe:	ec 0f       	add	r30, r28
 300:	fd 1f       	adc	r31, r29
 302:	ea 5f       	subi	r30, 0xFA	; 250
 304:	fd 4f       	sbci	r31, 0xFD	; 253
 306:	80 81       	ld	r24, Z
 308:	91 81       	ldd	r25, Z+1	; 0x01
 30a:	89 2b       	or	r24, r25
 30c:	09 f4       	brne	.+2      	; 0x310 <__vector_21+0x48>
 30e:	53 c0       	rjmp	.+166    	; 0x3b6 <__vector_21+0xee>
		{
			continue;
		}
		
		if(pin_is_high(i))
 310:	ce 01       	movw	r24, r28
 312:	c9 df       	rcall	.-110    	; 0x2a6 <pin_is_high>
 314:	88 23       	and	r24, r24
 316:	89 f1       	breq	.+98     	; 0x37a <__vector_21+0xb2>
		{
			if(!input_pins[i].state)
 318:	fe 01       	movw	r30, r28
 31a:	ee 0f       	add	r30, r30
 31c:	ff 1f       	adc	r31, r31
 31e:	ec 0f       	add	r30, r28
 320:	fd 1f       	adc	r31, r29
 322:	ea 5f       	subi	r30, 0xFA	; 250
 324:	fd 4f       	sbci	r31, 0xFD	; 253
 326:	82 81       	ldd	r24, Z+2	; 0x02
 328:	81 11       	cpse	r24, r1
 32a:	0e c0       	rjmp	.+28     	; 0x348 <__vector_21+0x80>
			{
				input_pins[i].state = true;
 32c:	fe 01       	movw	r30, r28
 32e:	ee 0f       	add	r30, r30
 330:	ff 1f       	adc	r31, r31
 332:	ec 0f       	add	r30, r28
 334:	fd 1f       	adc	r31, r29
 336:	ea 5f       	subi	r30, 0xFA	; 250
 338:	fd 4f       	sbci	r31, 0xFD	; 253
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	82 83       	std	Z+2, r24	; 0x02
				*input_pins[i].output_pointer = 0;				
 33e:	01 90       	ld	r0, Z+
 340:	f0 81       	ld	r31, Z
 342:	e0 2d       	mov	r30, r0
 344:	11 82       	std	Z+1, r1	; 0x01
 346:	10 82       	st	Z, r1
			}

			if(input_pins[i].state)
 348:	fe 01       	movw	r30, r28
 34a:	ee 0f       	add	r30, r30
 34c:	ff 1f       	adc	r31, r31
 34e:	ec 0f       	add	r30, r28
 350:	fd 1f       	adc	r31, r29
 352:	ea 5f       	subi	r30, 0xFA	; 250
 354:	fd 4f       	sbci	r31, 0xFD	; 253
 356:	82 81       	ldd	r24, Z+2	; 0x02
 358:	88 23       	and	r24, r24
 35a:	79 f0       	breq	.+30     	; 0x37a <__vector_21+0xb2>
			{
				*input_pins[i].output_pointer += TICKS_PER_MEASUREMENT;
 35c:	fe 01       	movw	r30, r28
 35e:	ee 0f       	add	r30, r30
 360:	ff 1f       	adc	r31, r31
 362:	ec 0f       	add	r30, r28
 364:	fd 1f       	adc	r31, r29
 366:	ea 5f       	subi	r30, 0xFA	; 250
 368:	fd 4f       	sbci	r31, 0xFD	; 253
 36a:	01 90       	ld	r0, Z+
 36c:	f0 81       	ld	r31, Z
 36e:	e0 2d       	mov	r30, r0
 370:	80 81       	ld	r24, Z
 372:	91 81       	ldd	r25, Z+1	; 0x01
 374:	05 96       	adiw	r24, 0x05	; 5
 376:	91 83       	std	Z+1, r25	; 0x01
 378:	80 83       	st	Z, r24
			}			
		}

		if(!pin_is_high(i) && input_pins[i].state)
 37a:	ce 01       	movw	r24, r28
 37c:	94 df       	rcall	.-216    	; 0x2a6 <pin_is_high>
 37e:	81 11       	cpse	r24, r1
 380:	1a c0       	rjmp	.+52     	; 0x3b6 <__vector_21+0xee>
 382:	fe 01       	movw	r30, r28
 384:	ee 0f       	add	r30, r30
 386:	ff 1f       	adc	r31, r31
 388:	ec 0f       	add	r30, r28
 38a:	fd 1f       	adc	r31, r29
 38c:	ea 5f       	subi	r30, 0xFA	; 250
 38e:	fd 4f       	sbci	r31, 0xFD	; 253
 390:	82 81       	ldd	r24, Z+2	; 0x02
 392:	88 23       	and	r24, r24
 394:	81 f0       	breq	.+32     	; 0x3b6 <__vector_21+0xee>
		{
			*input_pins[i].output_pointer += TICKS_PER_MEASUREMENT;
 396:	fe 01       	movw	r30, r28
 398:	ee 0f       	add	r30, r30
 39a:	ff 1f       	adc	r31, r31
 39c:	ec 0f       	add	r30, r28
 39e:	fd 1f       	adc	r31, r29
 3a0:	ea 5f       	subi	r30, 0xFA	; 250
 3a2:	fd 4f       	sbci	r31, 0xFD	; 253
 3a4:	a0 81       	ld	r26, Z
 3a6:	b1 81       	ldd	r27, Z+1	; 0x01
 3a8:	8d 91       	ld	r24, X+
 3aa:	9c 91       	ld	r25, X
 3ac:	11 97       	sbiw	r26, 0x01	; 1
 3ae:	05 96       	adiw	r24, 0x05	; 5
 3b0:	8d 93       	st	X+, r24
 3b2:	9c 93       	st	X, r25
			input_pins[i].state = false;
 3b4:	12 82       	std	Z+2, r1	; 0x02
	return PINB & (1 << pin_number);
}

ISR(TIMER0_COMPA_vect)
{
	for(int i = 0; i < 8; i++)
 3b6:	21 96       	adiw	r28, 0x01	; 1
 3b8:	c8 30       	cpi	r28, 0x08	; 8
 3ba:	d1 05       	cpc	r29, r1
 3bc:	0c f4       	brge	.+2      	; 0x3c0 <__vector_21+0xf8>
 3be:	9c cf       	rjmp	.-200    	; 0x2f8 <__vector_21+0x30>
			*input_pins[i].output_pointer += TICKS_PER_MEASUREMENT;
			input_pins[i].state = false;
		}
	}

	TCNT0 = 0;
 3c0:	16 bc       	out	0x26, r1	; 38
}
 3c2:	ff 91       	pop	r31
 3c4:	ef 91       	pop	r30
 3c6:	df 91       	pop	r29
 3c8:	cf 91       	pop	r28
 3ca:	bf 91       	pop	r27
 3cc:	af 91       	pop	r26
 3ce:	9f 91       	pop	r25
 3d0:	8f 91       	pop	r24
 3d2:	7f 91       	pop	r23
 3d4:	6f 91       	pop	r22
 3d6:	5f 91       	pop	r21
 3d8:	4f 91       	pop	r20
 3da:	3f 91       	pop	r19
 3dc:	2f 91       	pop	r18
 3de:	0f 90       	pop	r0
 3e0:	0b be       	out	0x3b, r0	; 59
 3e2:	0f 90       	pop	r0
 3e4:	0f be       	out	0x3f, r0	; 63
 3e6:	0f 90       	pop	r0
 3e8:	1f 90       	pop	r1
 3ea:	18 95       	reti

000003ec <__subsf3>:
 3ec:	50 58       	subi	r21, 0x80	; 128

000003ee <__addsf3>:
 3ee:	bb 27       	eor	r27, r27
 3f0:	aa 27       	eor	r26, r26
 3f2:	0e d0       	rcall	.+28     	; 0x410 <__addsf3x>
 3f4:	4d c1       	rjmp	.+666    	; 0x690 <__fp_round>
 3f6:	3e d1       	rcall	.+636    	; 0x674 <__fp_pscA>
 3f8:	30 f0       	brcs	.+12     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fa:	43 d1       	rcall	.+646    	; 0x682 <__fp_pscB>
 3fc:	20 f0       	brcs	.+8      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fe:	31 f4       	brne	.+12     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 400:	9f 3f       	cpi	r25, 0xFF	; 255
 402:	11 f4       	brne	.+4      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 404:	1e f4       	brtc	.+6      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 406:	33 c1       	rjmp	.+614    	; 0x66e <__fp_nan>
 408:	0e f4       	brtc	.+2      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 40a:	e0 95       	com	r30
 40c:	e7 fb       	bst	r30, 7
 40e:	29 c1       	rjmp	.+594    	; 0x662 <__fp_inf>

00000410 <__addsf3x>:
 410:	e9 2f       	mov	r30, r25
 412:	4f d1       	rcall	.+670    	; 0x6b2 <__fp_split3>
 414:	80 f3       	brcs	.-32     	; 0x3f6 <__addsf3+0x8>
 416:	ba 17       	cp	r27, r26
 418:	62 07       	cpc	r22, r18
 41a:	73 07       	cpc	r23, r19
 41c:	84 07       	cpc	r24, r20
 41e:	95 07       	cpc	r25, r21
 420:	18 f0       	brcs	.+6      	; 0x428 <__addsf3x+0x18>
 422:	71 f4       	brne	.+28     	; 0x440 <__addsf3x+0x30>
 424:	9e f5       	brtc	.+102    	; 0x48c <__addsf3x+0x7c>
 426:	67 c1       	rjmp	.+718    	; 0x6f6 <__fp_zero>
 428:	0e f4       	brtc	.+2      	; 0x42c <__addsf3x+0x1c>
 42a:	e0 95       	com	r30
 42c:	0b 2e       	mov	r0, r27
 42e:	ba 2f       	mov	r27, r26
 430:	a0 2d       	mov	r26, r0
 432:	0b 01       	movw	r0, r22
 434:	b9 01       	movw	r22, r18
 436:	90 01       	movw	r18, r0
 438:	0c 01       	movw	r0, r24
 43a:	ca 01       	movw	r24, r20
 43c:	a0 01       	movw	r20, r0
 43e:	11 24       	eor	r1, r1
 440:	ff 27       	eor	r31, r31
 442:	59 1b       	sub	r21, r25
 444:	99 f0       	breq	.+38     	; 0x46c <__addsf3x+0x5c>
 446:	59 3f       	cpi	r21, 0xF9	; 249
 448:	50 f4       	brcc	.+20     	; 0x45e <__addsf3x+0x4e>
 44a:	50 3e       	cpi	r21, 0xE0	; 224
 44c:	68 f1       	brcs	.+90     	; 0x4a8 <__addsf3x+0x98>
 44e:	1a 16       	cp	r1, r26
 450:	f0 40       	sbci	r31, 0x00	; 0
 452:	a2 2f       	mov	r26, r18
 454:	23 2f       	mov	r18, r19
 456:	34 2f       	mov	r19, r20
 458:	44 27       	eor	r20, r20
 45a:	58 5f       	subi	r21, 0xF8	; 248
 45c:	f3 cf       	rjmp	.-26     	; 0x444 <__addsf3x+0x34>
 45e:	46 95       	lsr	r20
 460:	37 95       	ror	r19
 462:	27 95       	ror	r18
 464:	a7 95       	ror	r26
 466:	f0 40       	sbci	r31, 0x00	; 0
 468:	53 95       	inc	r21
 46a:	c9 f7       	brne	.-14     	; 0x45e <__addsf3x+0x4e>
 46c:	7e f4       	brtc	.+30     	; 0x48c <__addsf3x+0x7c>
 46e:	1f 16       	cp	r1, r31
 470:	ba 0b       	sbc	r27, r26
 472:	62 0b       	sbc	r22, r18
 474:	73 0b       	sbc	r23, r19
 476:	84 0b       	sbc	r24, r20
 478:	ba f0       	brmi	.+46     	; 0x4a8 <__addsf3x+0x98>
 47a:	91 50       	subi	r25, 0x01	; 1
 47c:	a1 f0       	breq	.+40     	; 0x4a6 <__addsf3x+0x96>
 47e:	ff 0f       	add	r31, r31
 480:	bb 1f       	adc	r27, r27
 482:	66 1f       	adc	r22, r22
 484:	77 1f       	adc	r23, r23
 486:	88 1f       	adc	r24, r24
 488:	c2 f7       	brpl	.-16     	; 0x47a <__addsf3x+0x6a>
 48a:	0e c0       	rjmp	.+28     	; 0x4a8 <__addsf3x+0x98>
 48c:	ba 0f       	add	r27, r26
 48e:	62 1f       	adc	r22, r18
 490:	73 1f       	adc	r23, r19
 492:	84 1f       	adc	r24, r20
 494:	48 f4       	brcc	.+18     	; 0x4a8 <__addsf3x+0x98>
 496:	87 95       	ror	r24
 498:	77 95       	ror	r23
 49a:	67 95       	ror	r22
 49c:	b7 95       	ror	r27
 49e:	f7 95       	ror	r31
 4a0:	9e 3f       	cpi	r25, 0xFE	; 254
 4a2:	08 f0       	brcs	.+2      	; 0x4a6 <__addsf3x+0x96>
 4a4:	b3 cf       	rjmp	.-154    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 4a6:	93 95       	inc	r25
 4a8:	88 0f       	add	r24, r24
 4aa:	08 f0       	brcs	.+2      	; 0x4ae <__addsf3x+0x9e>
 4ac:	99 27       	eor	r25, r25
 4ae:	ee 0f       	add	r30, r30
 4b0:	97 95       	ror	r25
 4b2:	87 95       	ror	r24
 4b4:	08 95       	ret

000004b6 <__divsf3>:
 4b6:	0c d0       	rcall	.+24     	; 0x4d0 <__divsf3x>
 4b8:	eb c0       	rjmp	.+470    	; 0x690 <__fp_round>
 4ba:	e3 d0       	rcall	.+454    	; 0x682 <__fp_pscB>
 4bc:	40 f0       	brcs	.+16     	; 0x4ce <__divsf3+0x18>
 4be:	da d0       	rcall	.+436    	; 0x674 <__fp_pscA>
 4c0:	30 f0       	brcs	.+12     	; 0x4ce <__divsf3+0x18>
 4c2:	21 f4       	brne	.+8      	; 0x4cc <__divsf3+0x16>
 4c4:	5f 3f       	cpi	r21, 0xFF	; 255
 4c6:	19 f0       	breq	.+6      	; 0x4ce <__divsf3+0x18>
 4c8:	cc c0       	rjmp	.+408    	; 0x662 <__fp_inf>
 4ca:	51 11       	cpse	r21, r1
 4cc:	15 c1       	rjmp	.+554    	; 0x6f8 <__fp_szero>
 4ce:	cf c0       	rjmp	.+414    	; 0x66e <__fp_nan>

000004d0 <__divsf3x>:
 4d0:	f0 d0       	rcall	.+480    	; 0x6b2 <__fp_split3>
 4d2:	98 f3       	brcs	.-26     	; 0x4ba <__divsf3+0x4>

000004d4 <__divsf3_pse>:
 4d4:	99 23       	and	r25, r25
 4d6:	c9 f3       	breq	.-14     	; 0x4ca <__divsf3+0x14>
 4d8:	55 23       	and	r21, r21
 4da:	b1 f3       	breq	.-20     	; 0x4c8 <__divsf3+0x12>
 4dc:	95 1b       	sub	r25, r21
 4de:	55 0b       	sbc	r21, r21
 4e0:	bb 27       	eor	r27, r27
 4e2:	aa 27       	eor	r26, r26
 4e4:	62 17       	cp	r22, r18
 4e6:	73 07       	cpc	r23, r19
 4e8:	84 07       	cpc	r24, r20
 4ea:	38 f0       	brcs	.+14     	; 0x4fa <__divsf3_pse+0x26>
 4ec:	9f 5f       	subi	r25, 0xFF	; 255
 4ee:	5f 4f       	sbci	r21, 0xFF	; 255
 4f0:	22 0f       	add	r18, r18
 4f2:	33 1f       	adc	r19, r19
 4f4:	44 1f       	adc	r20, r20
 4f6:	aa 1f       	adc	r26, r26
 4f8:	a9 f3       	breq	.-22     	; 0x4e4 <__divsf3_pse+0x10>
 4fa:	33 d0       	rcall	.+102    	; 0x562 <__divsf3_pse+0x8e>
 4fc:	0e 2e       	mov	r0, r30
 4fe:	3a f0       	brmi	.+14     	; 0x50e <__divsf3_pse+0x3a>
 500:	e0 e8       	ldi	r30, 0x80	; 128
 502:	30 d0       	rcall	.+96     	; 0x564 <__divsf3_pse+0x90>
 504:	91 50       	subi	r25, 0x01	; 1
 506:	50 40       	sbci	r21, 0x00	; 0
 508:	e6 95       	lsr	r30
 50a:	00 1c       	adc	r0, r0
 50c:	ca f7       	brpl	.-14     	; 0x500 <__divsf3_pse+0x2c>
 50e:	29 d0       	rcall	.+82     	; 0x562 <__divsf3_pse+0x8e>
 510:	fe 2f       	mov	r31, r30
 512:	27 d0       	rcall	.+78     	; 0x562 <__divsf3_pse+0x8e>
 514:	66 0f       	add	r22, r22
 516:	77 1f       	adc	r23, r23
 518:	88 1f       	adc	r24, r24
 51a:	bb 1f       	adc	r27, r27
 51c:	26 17       	cp	r18, r22
 51e:	37 07       	cpc	r19, r23
 520:	48 07       	cpc	r20, r24
 522:	ab 07       	cpc	r26, r27
 524:	b0 e8       	ldi	r27, 0x80	; 128
 526:	09 f0       	breq	.+2      	; 0x52a <__divsf3_pse+0x56>
 528:	bb 0b       	sbc	r27, r27
 52a:	80 2d       	mov	r24, r0
 52c:	bf 01       	movw	r22, r30
 52e:	ff 27       	eor	r31, r31
 530:	93 58       	subi	r25, 0x83	; 131
 532:	5f 4f       	sbci	r21, 0xFF	; 255
 534:	2a f0       	brmi	.+10     	; 0x540 <__divsf3_pse+0x6c>
 536:	9e 3f       	cpi	r25, 0xFE	; 254
 538:	51 05       	cpc	r21, r1
 53a:	68 f0       	brcs	.+26     	; 0x556 <__divsf3_pse+0x82>
 53c:	92 c0       	rjmp	.+292    	; 0x662 <__fp_inf>
 53e:	dc c0       	rjmp	.+440    	; 0x6f8 <__fp_szero>
 540:	5f 3f       	cpi	r21, 0xFF	; 255
 542:	ec f3       	brlt	.-6      	; 0x53e <__divsf3_pse+0x6a>
 544:	98 3e       	cpi	r25, 0xE8	; 232
 546:	dc f3       	brlt	.-10     	; 0x53e <__divsf3_pse+0x6a>
 548:	86 95       	lsr	r24
 54a:	77 95       	ror	r23
 54c:	67 95       	ror	r22
 54e:	b7 95       	ror	r27
 550:	f7 95       	ror	r31
 552:	9f 5f       	subi	r25, 0xFF	; 255
 554:	c9 f7       	brne	.-14     	; 0x548 <__divsf3_pse+0x74>
 556:	88 0f       	add	r24, r24
 558:	91 1d       	adc	r25, r1
 55a:	96 95       	lsr	r25
 55c:	87 95       	ror	r24
 55e:	97 f9       	bld	r25, 7
 560:	08 95       	ret
 562:	e1 e0       	ldi	r30, 0x01	; 1
 564:	66 0f       	add	r22, r22
 566:	77 1f       	adc	r23, r23
 568:	88 1f       	adc	r24, r24
 56a:	bb 1f       	adc	r27, r27
 56c:	62 17       	cp	r22, r18
 56e:	73 07       	cpc	r23, r19
 570:	84 07       	cpc	r24, r20
 572:	ba 07       	cpc	r27, r26
 574:	20 f0       	brcs	.+8      	; 0x57e <__divsf3_pse+0xaa>
 576:	62 1b       	sub	r22, r18
 578:	73 0b       	sbc	r23, r19
 57a:	84 0b       	sbc	r24, r20
 57c:	ba 0b       	sbc	r27, r26
 57e:	ee 1f       	adc	r30, r30
 580:	88 f7       	brcc	.-30     	; 0x564 <__divsf3_pse+0x90>
 582:	e0 95       	com	r30
 584:	08 95       	ret

00000586 <__fixsfsi>:
 586:	04 d0       	rcall	.+8      	; 0x590 <__fixunssfsi>
 588:	68 94       	set
 58a:	b1 11       	cpse	r27, r1
 58c:	b5 c0       	rjmp	.+362    	; 0x6f8 <__fp_szero>
 58e:	08 95       	ret

00000590 <__fixunssfsi>:
 590:	98 d0       	rcall	.+304    	; 0x6c2 <__fp_splitA>
 592:	88 f0       	brcs	.+34     	; 0x5b6 <__fixunssfsi+0x26>
 594:	9f 57       	subi	r25, 0x7F	; 127
 596:	90 f0       	brcs	.+36     	; 0x5bc <__fixunssfsi+0x2c>
 598:	b9 2f       	mov	r27, r25
 59a:	99 27       	eor	r25, r25
 59c:	b7 51       	subi	r27, 0x17	; 23
 59e:	a0 f0       	brcs	.+40     	; 0x5c8 <__fixunssfsi+0x38>
 5a0:	d1 f0       	breq	.+52     	; 0x5d6 <__fixunssfsi+0x46>
 5a2:	66 0f       	add	r22, r22
 5a4:	77 1f       	adc	r23, r23
 5a6:	88 1f       	adc	r24, r24
 5a8:	99 1f       	adc	r25, r25
 5aa:	1a f0       	brmi	.+6      	; 0x5b2 <__fixunssfsi+0x22>
 5ac:	ba 95       	dec	r27
 5ae:	c9 f7       	brne	.-14     	; 0x5a2 <__fixunssfsi+0x12>
 5b0:	12 c0       	rjmp	.+36     	; 0x5d6 <__fixunssfsi+0x46>
 5b2:	b1 30       	cpi	r27, 0x01	; 1
 5b4:	81 f0       	breq	.+32     	; 0x5d6 <__fixunssfsi+0x46>
 5b6:	9f d0       	rcall	.+318    	; 0x6f6 <__fp_zero>
 5b8:	b1 e0       	ldi	r27, 0x01	; 1
 5ba:	08 95       	ret
 5bc:	9c c0       	rjmp	.+312    	; 0x6f6 <__fp_zero>
 5be:	67 2f       	mov	r22, r23
 5c0:	78 2f       	mov	r23, r24
 5c2:	88 27       	eor	r24, r24
 5c4:	b8 5f       	subi	r27, 0xF8	; 248
 5c6:	39 f0       	breq	.+14     	; 0x5d6 <__fixunssfsi+0x46>
 5c8:	b9 3f       	cpi	r27, 0xF9	; 249
 5ca:	cc f3       	brlt	.-14     	; 0x5be <__fixunssfsi+0x2e>
 5cc:	86 95       	lsr	r24
 5ce:	77 95       	ror	r23
 5d0:	67 95       	ror	r22
 5d2:	b3 95       	inc	r27
 5d4:	d9 f7       	brne	.-10     	; 0x5cc <__fixunssfsi+0x3c>
 5d6:	3e f4       	brtc	.+14     	; 0x5e6 <__fixunssfsi+0x56>
 5d8:	90 95       	com	r25
 5da:	80 95       	com	r24
 5dc:	70 95       	com	r23
 5de:	61 95       	neg	r22
 5e0:	7f 4f       	sbci	r23, 0xFF	; 255
 5e2:	8f 4f       	sbci	r24, 0xFF	; 255
 5e4:	9f 4f       	sbci	r25, 0xFF	; 255
 5e6:	08 95       	ret

000005e8 <__floatunsisf>:
 5e8:	e8 94       	clt
 5ea:	09 c0       	rjmp	.+18     	; 0x5fe <__floatsisf+0x12>

000005ec <__floatsisf>:
 5ec:	97 fb       	bst	r25, 7
 5ee:	3e f4       	brtc	.+14     	; 0x5fe <__floatsisf+0x12>
 5f0:	90 95       	com	r25
 5f2:	80 95       	com	r24
 5f4:	70 95       	com	r23
 5f6:	61 95       	neg	r22
 5f8:	7f 4f       	sbci	r23, 0xFF	; 255
 5fa:	8f 4f       	sbci	r24, 0xFF	; 255
 5fc:	9f 4f       	sbci	r25, 0xFF	; 255
 5fe:	99 23       	and	r25, r25
 600:	a9 f0       	breq	.+42     	; 0x62c <__floatsisf+0x40>
 602:	f9 2f       	mov	r31, r25
 604:	96 e9       	ldi	r25, 0x96	; 150
 606:	bb 27       	eor	r27, r27
 608:	93 95       	inc	r25
 60a:	f6 95       	lsr	r31
 60c:	87 95       	ror	r24
 60e:	77 95       	ror	r23
 610:	67 95       	ror	r22
 612:	b7 95       	ror	r27
 614:	f1 11       	cpse	r31, r1
 616:	f8 cf       	rjmp	.-16     	; 0x608 <__floatsisf+0x1c>
 618:	fa f4       	brpl	.+62     	; 0x658 <__floatsisf+0x6c>
 61a:	bb 0f       	add	r27, r27
 61c:	11 f4       	brne	.+4      	; 0x622 <__floatsisf+0x36>
 61e:	60 ff       	sbrs	r22, 0
 620:	1b c0       	rjmp	.+54     	; 0x658 <__floatsisf+0x6c>
 622:	6f 5f       	subi	r22, 0xFF	; 255
 624:	7f 4f       	sbci	r23, 0xFF	; 255
 626:	8f 4f       	sbci	r24, 0xFF	; 255
 628:	9f 4f       	sbci	r25, 0xFF	; 255
 62a:	16 c0       	rjmp	.+44     	; 0x658 <__floatsisf+0x6c>
 62c:	88 23       	and	r24, r24
 62e:	11 f0       	breq	.+4      	; 0x634 <__floatsisf+0x48>
 630:	96 e9       	ldi	r25, 0x96	; 150
 632:	11 c0       	rjmp	.+34     	; 0x656 <__floatsisf+0x6a>
 634:	77 23       	and	r23, r23
 636:	21 f0       	breq	.+8      	; 0x640 <__floatsisf+0x54>
 638:	9e e8       	ldi	r25, 0x8E	; 142
 63a:	87 2f       	mov	r24, r23
 63c:	76 2f       	mov	r23, r22
 63e:	05 c0       	rjmp	.+10     	; 0x64a <__floatsisf+0x5e>
 640:	66 23       	and	r22, r22
 642:	71 f0       	breq	.+28     	; 0x660 <__floatsisf+0x74>
 644:	96 e8       	ldi	r25, 0x86	; 134
 646:	86 2f       	mov	r24, r22
 648:	70 e0       	ldi	r23, 0x00	; 0
 64a:	60 e0       	ldi	r22, 0x00	; 0
 64c:	2a f0       	brmi	.+10     	; 0x658 <__floatsisf+0x6c>
 64e:	9a 95       	dec	r25
 650:	66 0f       	add	r22, r22
 652:	77 1f       	adc	r23, r23
 654:	88 1f       	adc	r24, r24
 656:	da f7       	brpl	.-10     	; 0x64e <__floatsisf+0x62>
 658:	88 0f       	add	r24, r24
 65a:	96 95       	lsr	r25
 65c:	87 95       	ror	r24
 65e:	97 f9       	bld	r25, 7
 660:	08 95       	ret

00000662 <__fp_inf>:
 662:	97 f9       	bld	r25, 7
 664:	9f 67       	ori	r25, 0x7F	; 127
 666:	80 e8       	ldi	r24, 0x80	; 128
 668:	70 e0       	ldi	r23, 0x00	; 0
 66a:	60 e0       	ldi	r22, 0x00	; 0
 66c:	08 95       	ret

0000066e <__fp_nan>:
 66e:	9f ef       	ldi	r25, 0xFF	; 255
 670:	80 ec       	ldi	r24, 0xC0	; 192
 672:	08 95       	ret

00000674 <__fp_pscA>:
 674:	00 24       	eor	r0, r0
 676:	0a 94       	dec	r0
 678:	16 16       	cp	r1, r22
 67a:	17 06       	cpc	r1, r23
 67c:	18 06       	cpc	r1, r24
 67e:	09 06       	cpc	r0, r25
 680:	08 95       	ret

00000682 <__fp_pscB>:
 682:	00 24       	eor	r0, r0
 684:	0a 94       	dec	r0
 686:	12 16       	cp	r1, r18
 688:	13 06       	cpc	r1, r19
 68a:	14 06       	cpc	r1, r20
 68c:	05 06       	cpc	r0, r21
 68e:	08 95       	ret

00000690 <__fp_round>:
 690:	09 2e       	mov	r0, r25
 692:	03 94       	inc	r0
 694:	00 0c       	add	r0, r0
 696:	11 f4       	brne	.+4      	; 0x69c <__fp_round+0xc>
 698:	88 23       	and	r24, r24
 69a:	52 f0       	brmi	.+20     	; 0x6b0 <__fp_round+0x20>
 69c:	bb 0f       	add	r27, r27
 69e:	40 f4       	brcc	.+16     	; 0x6b0 <__fp_round+0x20>
 6a0:	bf 2b       	or	r27, r31
 6a2:	11 f4       	brne	.+4      	; 0x6a8 <__fp_round+0x18>
 6a4:	60 ff       	sbrs	r22, 0
 6a6:	04 c0       	rjmp	.+8      	; 0x6b0 <__fp_round+0x20>
 6a8:	6f 5f       	subi	r22, 0xFF	; 255
 6aa:	7f 4f       	sbci	r23, 0xFF	; 255
 6ac:	8f 4f       	sbci	r24, 0xFF	; 255
 6ae:	9f 4f       	sbci	r25, 0xFF	; 255
 6b0:	08 95       	ret

000006b2 <__fp_split3>:
 6b2:	57 fd       	sbrc	r21, 7
 6b4:	90 58       	subi	r25, 0x80	; 128
 6b6:	44 0f       	add	r20, r20
 6b8:	55 1f       	adc	r21, r21
 6ba:	59 f0       	breq	.+22     	; 0x6d2 <__fp_splitA+0x10>
 6bc:	5f 3f       	cpi	r21, 0xFF	; 255
 6be:	71 f0       	breq	.+28     	; 0x6dc <__fp_splitA+0x1a>
 6c0:	47 95       	ror	r20

000006c2 <__fp_splitA>:
 6c2:	88 0f       	add	r24, r24
 6c4:	97 fb       	bst	r25, 7
 6c6:	99 1f       	adc	r25, r25
 6c8:	61 f0       	breq	.+24     	; 0x6e2 <__fp_splitA+0x20>
 6ca:	9f 3f       	cpi	r25, 0xFF	; 255
 6cc:	79 f0       	breq	.+30     	; 0x6ec <__fp_splitA+0x2a>
 6ce:	87 95       	ror	r24
 6d0:	08 95       	ret
 6d2:	12 16       	cp	r1, r18
 6d4:	13 06       	cpc	r1, r19
 6d6:	14 06       	cpc	r1, r20
 6d8:	55 1f       	adc	r21, r21
 6da:	f2 cf       	rjmp	.-28     	; 0x6c0 <__fp_split3+0xe>
 6dc:	46 95       	lsr	r20
 6de:	f1 df       	rcall	.-30     	; 0x6c2 <__fp_splitA>
 6e0:	08 c0       	rjmp	.+16     	; 0x6f2 <__fp_splitA+0x30>
 6e2:	16 16       	cp	r1, r22
 6e4:	17 06       	cpc	r1, r23
 6e6:	18 06       	cpc	r1, r24
 6e8:	99 1f       	adc	r25, r25
 6ea:	f1 cf       	rjmp	.-30     	; 0x6ce <__fp_splitA+0xc>
 6ec:	86 95       	lsr	r24
 6ee:	71 05       	cpc	r23, r1
 6f0:	61 05       	cpc	r22, r1
 6f2:	08 94       	sec
 6f4:	08 95       	ret

000006f6 <__fp_zero>:
 6f6:	e8 94       	clt

000006f8 <__fp_szero>:
 6f8:	bb 27       	eor	r27, r27
 6fa:	66 27       	eor	r22, r22
 6fc:	77 27       	eor	r23, r23
 6fe:	cb 01       	movw	r24, r22
 700:	97 f9       	bld	r25, 7
 702:	08 95       	ret

00000704 <__mulsf3>:
 704:	0b d0       	rcall	.+22     	; 0x71c <__mulsf3x>
 706:	c4 cf       	rjmp	.-120    	; 0x690 <__fp_round>
 708:	b5 df       	rcall	.-150    	; 0x674 <__fp_pscA>
 70a:	28 f0       	brcs	.+10     	; 0x716 <__mulsf3+0x12>
 70c:	ba df       	rcall	.-140    	; 0x682 <__fp_pscB>
 70e:	18 f0       	brcs	.+6      	; 0x716 <__mulsf3+0x12>
 710:	95 23       	and	r25, r21
 712:	09 f0       	breq	.+2      	; 0x716 <__mulsf3+0x12>
 714:	a6 cf       	rjmp	.-180    	; 0x662 <__fp_inf>
 716:	ab cf       	rjmp	.-170    	; 0x66e <__fp_nan>
 718:	11 24       	eor	r1, r1
 71a:	ee cf       	rjmp	.-36     	; 0x6f8 <__fp_szero>

0000071c <__mulsf3x>:
 71c:	ca df       	rcall	.-108    	; 0x6b2 <__fp_split3>
 71e:	a0 f3       	brcs	.-24     	; 0x708 <__mulsf3+0x4>

00000720 <__mulsf3_pse>:
 720:	95 9f       	mul	r25, r21
 722:	d1 f3       	breq	.-12     	; 0x718 <__mulsf3+0x14>
 724:	95 0f       	add	r25, r21
 726:	50 e0       	ldi	r21, 0x00	; 0
 728:	55 1f       	adc	r21, r21
 72a:	62 9f       	mul	r22, r18
 72c:	f0 01       	movw	r30, r0
 72e:	72 9f       	mul	r23, r18
 730:	bb 27       	eor	r27, r27
 732:	f0 0d       	add	r31, r0
 734:	b1 1d       	adc	r27, r1
 736:	63 9f       	mul	r22, r19
 738:	aa 27       	eor	r26, r26
 73a:	f0 0d       	add	r31, r0
 73c:	b1 1d       	adc	r27, r1
 73e:	aa 1f       	adc	r26, r26
 740:	64 9f       	mul	r22, r20
 742:	66 27       	eor	r22, r22
 744:	b0 0d       	add	r27, r0
 746:	a1 1d       	adc	r26, r1
 748:	66 1f       	adc	r22, r22
 74a:	82 9f       	mul	r24, r18
 74c:	22 27       	eor	r18, r18
 74e:	b0 0d       	add	r27, r0
 750:	a1 1d       	adc	r26, r1
 752:	62 1f       	adc	r22, r18
 754:	73 9f       	mul	r23, r19
 756:	b0 0d       	add	r27, r0
 758:	a1 1d       	adc	r26, r1
 75a:	62 1f       	adc	r22, r18
 75c:	83 9f       	mul	r24, r19
 75e:	a0 0d       	add	r26, r0
 760:	61 1d       	adc	r22, r1
 762:	22 1f       	adc	r18, r18
 764:	74 9f       	mul	r23, r20
 766:	33 27       	eor	r19, r19
 768:	a0 0d       	add	r26, r0
 76a:	61 1d       	adc	r22, r1
 76c:	23 1f       	adc	r18, r19
 76e:	84 9f       	mul	r24, r20
 770:	60 0d       	add	r22, r0
 772:	21 1d       	adc	r18, r1
 774:	82 2f       	mov	r24, r18
 776:	76 2f       	mov	r23, r22
 778:	6a 2f       	mov	r22, r26
 77a:	11 24       	eor	r1, r1
 77c:	9f 57       	subi	r25, 0x7F	; 127
 77e:	50 40       	sbci	r21, 0x00	; 0
 780:	8a f0       	brmi	.+34     	; 0x7a4 <__mulsf3_pse+0x84>
 782:	e1 f0       	breq	.+56     	; 0x7bc <__mulsf3_pse+0x9c>
 784:	88 23       	and	r24, r24
 786:	4a f0       	brmi	.+18     	; 0x79a <__mulsf3_pse+0x7a>
 788:	ee 0f       	add	r30, r30
 78a:	ff 1f       	adc	r31, r31
 78c:	bb 1f       	adc	r27, r27
 78e:	66 1f       	adc	r22, r22
 790:	77 1f       	adc	r23, r23
 792:	88 1f       	adc	r24, r24
 794:	91 50       	subi	r25, 0x01	; 1
 796:	50 40       	sbci	r21, 0x00	; 0
 798:	a9 f7       	brne	.-22     	; 0x784 <__mulsf3_pse+0x64>
 79a:	9e 3f       	cpi	r25, 0xFE	; 254
 79c:	51 05       	cpc	r21, r1
 79e:	70 f0       	brcs	.+28     	; 0x7bc <__mulsf3_pse+0x9c>
 7a0:	60 cf       	rjmp	.-320    	; 0x662 <__fp_inf>
 7a2:	aa cf       	rjmp	.-172    	; 0x6f8 <__fp_szero>
 7a4:	5f 3f       	cpi	r21, 0xFF	; 255
 7a6:	ec f3       	brlt	.-6      	; 0x7a2 <__mulsf3_pse+0x82>
 7a8:	98 3e       	cpi	r25, 0xE8	; 232
 7aa:	dc f3       	brlt	.-10     	; 0x7a2 <__mulsf3_pse+0x82>
 7ac:	86 95       	lsr	r24
 7ae:	77 95       	ror	r23
 7b0:	67 95       	ror	r22
 7b2:	b7 95       	ror	r27
 7b4:	f7 95       	ror	r31
 7b6:	e7 95       	ror	r30
 7b8:	9f 5f       	subi	r25, 0xFF	; 255
 7ba:	c1 f7       	brne	.-16     	; 0x7ac <__mulsf3_pse+0x8c>
 7bc:	fe 2b       	or	r31, r30
 7be:	88 0f       	add	r24, r24
 7c0:	91 1d       	adc	r25, r1
 7c2:	96 95       	lsr	r25
 7c4:	87 95       	ror	r24
 7c6:	97 f9       	bld	r25, 7
 7c8:	08 95       	ret

000007ca <malloc>:
 7ca:	0f 93       	push	r16
 7cc:	1f 93       	push	r17
 7ce:	cf 93       	push	r28
 7d0:	df 93       	push	r29
 7d2:	82 30       	cpi	r24, 0x02	; 2
 7d4:	91 05       	cpc	r25, r1
 7d6:	10 f4       	brcc	.+4      	; 0x7dc <malloc+0x12>
 7d8:	82 e0       	ldi	r24, 0x02	; 2
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	e0 91 20 02 	lds	r30, 0x0220	; 0x800220 <__flp>
 7e0:	f0 91 21 02 	lds	r31, 0x0221	; 0x800221 <__flp+0x1>
 7e4:	20 e0       	ldi	r18, 0x00	; 0
 7e6:	30 e0       	ldi	r19, 0x00	; 0
 7e8:	a0 e0       	ldi	r26, 0x00	; 0
 7ea:	b0 e0       	ldi	r27, 0x00	; 0
 7ec:	30 97       	sbiw	r30, 0x00	; 0
 7ee:	19 f1       	breq	.+70     	; 0x836 <malloc+0x6c>
 7f0:	40 81       	ld	r20, Z
 7f2:	51 81       	ldd	r21, Z+1	; 0x01
 7f4:	02 81       	ldd	r16, Z+2	; 0x02
 7f6:	13 81       	ldd	r17, Z+3	; 0x03
 7f8:	48 17       	cp	r20, r24
 7fa:	59 07       	cpc	r21, r25
 7fc:	c8 f0       	brcs	.+50     	; 0x830 <malloc+0x66>
 7fe:	84 17       	cp	r24, r20
 800:	95 07       	cpc	r25, r21
 802:	69 f4       	brne	.+26     	; 0x81e <malloc+0x54>
 804:	10 97       	sbiw	r26, 0x00	; 0
 806:	31 f0       	breq	.+12     	; 0x814 <malloc+0x4a>
 808:	12 96       	adiw	r26, 0x02	; 2
 80a:	0c 93       	st	X, r16
 80c:	12 97       	sbiw	r26, 0x02	; 2
 80e:	13 96       	adiw	r26, 0x03	; 3
 810:	1c 93       	st	X, r17
 812:	27 c0       	rjmp	.+78     	; 0x862 <malloc+0x98>
 814:	00 93 20 02 	sts	0x0220, r16	; 0x800220 <__flp>
 818:	10 93 21 02 	sts	0x0221, r17	; 0x800221 <__flp+0x1>
 81c:	22 c0       	rjmp	.+68     	; 0x862 <malloc+0x98>
 81e:	21 15       	cp	r18, r1
 820:	31 05       	cpc	r19, r1
 822:	19 f0       	breq	.+6      	; 0x82a <malloc+0x60>
 824:	42 17       	cp	r20, r18
 826:	53 07       	cpc	r21, r19
 828:	18 f4       	brcc	.+6      	; 0x830 <malloc+0x66>
 82a:	9a 01       	movw	r18, r20
 82c:	bd 01       	movw	r22, r26
 82e:	ef 01       	movw	r28, r30
 830:	df 01       	movw	r26, r30
 832:	f8 01       	movw	r30, r16
 834:	db cf       	rjmp	.-74     	; 0x7ec <malloc+0x22>
 836:	21 15       	cp	r18, r1
 838:	31 05       	cpc	r19, r1
 83a:	f9 f0       	breq	.+62     	; 0x87a <malloc+0xb0>
 83c:	28 1b       	sub	r18, r24
 83e:	39 0b       	sbc	r19, r25
 840:	24 30       	cpi	r18, 0x04	; 4
 842:	31 05       	cpc	r19, r1
 844:	80 f4       	brcc	.+32     	; 0x866 <malloc+0x9c>
 846:	8a 81       	ldd	r24, Y+2	; 0x02
 848:	9b 81       	ldd	r25, Y+3	; 0x03
 84a:	61 15       	cp	r22, r1
 84c:	71 05       	cpc	r23, r1
 84e:	21 f0       	breq	.+8      	; 0x858 <malloc+0x8e>
 850:	fb 01       	movw	r30, r22
 852:	93 83       	std	Z+3, r25	; 0x03
 854:	82 83       	std	Z+2, r24	; 0x02
 856:	04 c0       	rjmp	.+8      	; 0x860 <malloc+0x96>
 858:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <__flp+0x1>
 85c:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <__flp>
 860:	fe 01       	movw	r30, r28
 862:	32 96       	adiw	r30, 0x02	; 2
 864:	44 c0       	rjmp	.+136    	; 0x8ee <malloc+0x124>
 866:	fe 01       	movw	r30, r28
 868:	e2 0f       	add	r30, r18
 86a:	f3 1f       	adc	r31, r19
 86c:	81 93       	st	Z+, r24
 86e:	91 93       	st	Z+, r25
 870:	22 50       	subi	r18, 0x02	; 2
 872:	31 09       	sbc	r19, r1
 874:	39 83       	std	Y+1, r19	; 0x01
 876:	28 83       	st	Y, r18
 878:	3a c0       	rjmp	.+116    	; 0x8ee <malloc+0x124>
 87a:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <__brkval>
 87e:	30 91 1f 02 	lds	r19, 0x021F	; 0x80021f <__brkval+0x1>
 882:	23 2b       	or	r18, r19
 884:	41 f4       	brne	.+16     	; 0x896 <malloc+0xcc>
 886:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
 88a:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
 88e:	30 93 1f 02 	sts	0x021F, r19	; 0x80021f <__brkval+0x1>
 892:	20 93 1e 02 	sts	0x021E, r18	; 0x80021e <__brkval>
 896:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
 89a:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
 89e:	21 15       	cp	r18, r1
 8a0:	31 05       	cpc	r19, r1
 8a2:	41 f4       	brne	.+16     	; 0x8b4 <malloc+0xea>
 8a4:	2d b7       	in	r18, 0x3d	; 61
 8a6:	3e b7       	in	r19, 0x3e	; 62
 8a8:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
 8ac:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
 8b0:	24 1b       	sub	r18, r20
 8b2:	35 0b       	sbc	r19, r21
 8b4:	e0 91 1e 02 	lds	r30, 0x021E	; 0x80021e <__brkval>
 8b8:	f0 91 1f 02 	lds	r31, 0x021F	; 0x80021f <__brkval+0x1>
 8bc:	e2 17       	cp	r30, r18
 8be:	f3 07       	cpc	r31, r19
 8c0:	a0 f4       	brcc	.+40     	; 0x8ea <malloc+0x120>
 8c2:	2e 1b       	sub	r18, r30
 8c4:	3f 0b       	sbc	r19, r31
 8c6:	28 17       	cp	r18, r24
 8c8:	39 07       	cpc	r19, r25
 8ca:	78 f0       	brcs	.+30     	; 0x8ea <malloc+0x120>
 8cc:	ac 01       	movw	r20, r24
 8ce:	4e 5f       	subi	r20, 0xFE	; 254
 8d0:	5f 4f       	sbci	r21, 0xFF	; 255
 8d2:	24 17       	cp	r18, r20
 8d4:	35 07       	cpc	r19, r21
 8d6:	48 f0       	brcs	.+18     	; 0x8ea <malloc+0x120>
 8d8:	4e 0f       	add	r20, r30
 8da:	5f 1f       	adc	r21, r31
 8dc:	50 93 1f 02 	sts	0x021F, r21	; 0x80021f <__brkval+0x1>
 8e0:	40 93 1e 02 	sts	0x021E, r20	; 0x80021e <__brkval>
 8e4:	81 93       	st	Z+, r24
 8e6:	91 93       	st	Z+, r25
 8e8:	02 c0       	rjmp	.+4      	; 0x8ee <malloc+0x124>
 8ea:	e0 e0       	ldi	r30, 0x00	; 0
 8ec:	f0 e0       	ldi	r31, 0x00	; 0
 8ee:	cf 01       	movw	r24, r30
 8f0:	df 91       	pop	r29
 8f2:	cf 91       	pop	r28
 8f4:	1f 91       	pop	r17
 8f6:	0f 91       	pop	r16
 8f8:	08 95       	ret

000008fa <free>:
 8fa:	cf 93       	push	r28
 8fc:	df 93       	push	r29
 8fe:	00 97       	sbiw	r24, 0x00	; 0
 900:	09 f4       	brne	.+2      	; 0x904 <free+0xa>
 902:	81 c0       	rjmp	.+258    	; 0xa06 <free+0x10c>
 904:	fc 01       	movw	r30, r24
 906:	32 97       	sbiw	r30, 0x02	; 2
 908:	13 82       	std	Z+3, r1	; 0x03
 90a:	12 82       	std	Z+2, r1	; 0x02
 90c:	a0 91 20 02 	lds	r26, 0x0220	; 0x800220 <__flp>
 910:	b0 91 21 02 	lds	r27, 0x0221	; 0x800221 <__flp+0x1>
 914:	10 97       	sbiw	r26, 0x00	; 0
 916:	81 f4       	brne	.+32     	; 0x938 <free+0x3e>
 918:	20 81       	ld	r18, Z
 91a:	31 81       	ldd	r19, Z+1	; 0x01
 91c:	82 0f       	add	r24, r18
 91e:	93 1f       	adc	r25, r19
 920:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <__brkval>
 924:	30 91 1f 02 	lds	r19, 0x021F	; 0x80021f <__brkval+0x1>
 928:	28 17       	cp	r18, r24
 92a:	39 07       	cpc	r19, r25
 92c:	51 f5       	brne	.+84     	; 0x982 <free+0x88>
 92e:	f0 93 1f 02 	sts	0x021F, r31	; 0x80021f <__brkval+0x1>
 932:	e0 93 1e 02 	sts	0x021E, r30	; 0x80021e <__brkval>
 936:	67 c0       	rjmp	.+206    	; 0xa06 <free+0x10c>
 938:	ed 01       	movw	r28, r26
 93a:	20 e0       	ldi	r18, 0x00	; 0
 93c:	30 e0       	ldi	r19, 0x00	; 0
 93e:	ce 17       	cp	r28, r30
 940:	df 07       	cpc	r29, r31
 942:	40 f4       	brcc	.+16     	; 0x954 <free+0x5a>
 944:	4a 81       	ldd	r20, Y+2	; 0x02
 946:	5b 81       	ldd	r21, Y+3	; 0x03
 948:	9e 01       	movw	r18, r28
 94a:	41 15       	cp	r20, r1
 94c:	51 05       	cpc	r21, r1
 94e:	f1 f0       	breq	.+60     	; 0x98c <free+0x92>
 950:	ea 01       	movw	r28, r20
 952:	f5 cf       	rjmp	.-22     	; 0x93e <free+0x44>
 954:	d3 83       	std	Z+3, r29	; 0x03
 956:	c2 83       	std	Z+2, r28	; 0x02
 958:	40 81       	ld	r20, Z
 95a:	51 81       	ldd	r21, Z+1	; 0x01
 95c:	84 0f       	add	r24, r20
 95e:	95 1f       	adc	r25, r21
 960:	c8 17       	cp	r28, r24
 962:	d9 07       	cpc	r29, r25
 964:	59 f4       	brne	.+22     	; 0x97c <free+0x82>
 966:	88 81       	ld	r24, Y
 968:	99 81       	ldd	r25, Y+1	; 0x01
 96a:	84 0f       	add	r24, r20
 96c:	95 1f       	adc	r25, r21
 96e:	02 96       	adiw	r24, 0x02	; 2
 970:	91 83       	std	Z+1, r25	; 0x01
 972:	80 83       	st	Z, r24
 974:	8a 81       	ldd	r24, Y+2	; 0x02
 976:	9b 81       	ldd	r25, Y+3	; 0x03
 978:	93 83       	std	Z+3, r25	; 0x03
 97a:	82 83       	std	Z+2, r24	; 0x02
 97c:	21 15       	cp	r18, r1
 97e:	31 05       	cpc	r19, r1
 980:	29 f4       	brne	.+10     	; 0x98c <free+0x92>
 982:	f0 93 21 02 	sts	0x0221, r31	; 0x800221 <__flp+0x1>
 986:	e0 93 20 02 	sts	0x0220, r30	; 0x800220 <__flp>
 98a:	3d c0       	rjmp	.+122    	; 0xa06 <free+0x10c>
 98c:	e9 01       	movw	r28, r18
 98e:	fb 83       	std	Y+3, r31	; 0x03
 990:	ea 83       	std	Y+2, r30	; 0x02
 992:	49 91       	ld	r20, Y+
 994:	59 91       	ld	r21, Y+
 996:	c4 0f       	add	r28, r20
 998:	d5 1f       	adc	r29, r21
 99a:	ec 17       	cp	r30, r28
 99c:	fd 07       	cpc	r31, r29
 99e:	61 f4       	brne	.+24     	; 0x9b8 <free+0xbe>
 9a0:	80 81       	ld	r24, Z
 9a2:	91 81       	ldd	r25, Z+1	; 0x01
 9a4:	84 0f       	add	r24, r20
 9a6:	95 1f       	adc	r25, r21
 9a8:	02 96       	adiw	r24, 0x02	; 2
 9aa:	e9 01       	movw	r28, r18
 9ac:	99 83       	std	Y+1, r25	; 0x01
 9ae:	88 83       	st	Y, r24
 9b0:	82 81       	ldd	r24, Z+2	; 0x02
 9b2:	93 81       	ldd	r25, Z+3	; 0x03
 9b4:	9b 83       	std	Y+3, r25	; 0x03
 9b6:	8a 83       	std	Y+2, r24	; 0x02
 9b8:	e0 e0       	ldi	r30, 0x00	; 0
 9ba:	f0 e0       	ldi	r31, 0x00	; 0
 9bc:	12 96       	adiw	r26, 0x02	; 2
 9be:	8d 91       	ld	r24, X+
 9c0:	9c 91       	ld	r25, X
 9c2:	13 97       	sbiw	r26, 0x03	; 3
 9c4:	00 97       	sbiw	r24, 0x00	; 0
 9c6:	19 f0       	breq	.+6      	; 0x9ce <free+0xd4>
 9c8:	fd 01       	movw	r30, r26
 9ca:	dc 01       	movw	r26, r24
 9cc:	f7 cf       	rjmp	.-18     	; 0x9bc <free+0xc2>
 9ce:	8d 91       	ld	r24, X+
 9d0:	9c 91       	ld	r25, X
 9d2:	11 97       	sbiw	r26, 0x01	; 1
 9d4:	9d 01       	movw	r18, r26
 9d6:	2e 5f       	subi	r18, 0xFE	; 254
 9d8:	3f 4f       	sbci	r19, 0xFF	; 255
 9da:	82 0f       	add	r24, r18
 9dc:	93 1f       	adc	r25, r19
 9de:	20 91 1e 02 	lds	r18, 0x021E	; 0x80021e <__brkval>
 9e2:	30 91 1f 02 	lds	r19, 0x021F	; 0x80021f <__brkval+0x1>
 9e6:	28 17       	cp	r18, r24
 9e8:	39 07       	cpc	r19, r25
 9ea:	69 f4       	brne	.+26     	; 0xa06 <free+0x10c>
 9ec:	30 97       	sbiw	r30, 0x00	; 0
 9ee:	29 f4       	brne	.+10     	; 0x9fa <free+0x100>
 9f0:	10 92 21 02 	sts	0x0221, r1	; 0x800221 <__flp+0x1>
 9f4:	10 92 20 02 	sts	0x0220, r1	; 0x800220 <__flp>
 9f8:	02 c0       	rjmp	.+4      	; 0x9fe <free+0x104>
 9fa:	13 82       	std	Z+3, r1	; 0x03
 9fc:	12 82       	std	Z+2, r1	; 0x02
 9fe:	b0 93 1f 02 	sts	0x021F, r27	; 0x80021f <__brkval+0x1>
 a02:	a0 93 1e 02 	sts	0x021E, r26	; 0x80021e <__brkval>
 a06:	df 91       	pop	r29
 a08:	cf 91       	pop	r28
 a0a:	08 95       	ret

00000a0c <_exit>:
 a0c:	f8 94       	cli

00000a0e <__stop_program>:
 a0e:	ff cf       	rjmp	.-2      	; 0xa0e <__stop_program>
